/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;

import Clases.Juego_Laberinto;
import Login.InicioPsicologo;
import Login.InicioPsicologo;
import Login.PagPrincipalPsicologo;
import Login.PagPrincipalPsicologo;
import Login.RegistrarsePariente;
import Login.RegistrarsePariente;
import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.ext.DatabaseClosedException;
import com.db4o.ext.DatabaseReadOnlyException;
import com.db4o.ext.Db4oIOException;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.file.Files;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Joel
 */
public class Pag_Crud_JLaberinto extends javax.swing.JFrame {

    JFileChooser seleccionar = new JFileChooser();
    String Codigo_JLab = "";
    byte[] imagen;
    ObjectContainer Base;
    String rutaImagen;

    public Pag_Crud_JLaberinto() {
        initComponents();
        Base = Db4o.openFile("src/BBDD/BaseDat.yap");
        MostrarDatos(Base);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        LblInfor2Niño = new javax.swing.JLabel();
        lbl_ImagenLab = new javax.swing.JLabel();
        btn_Ingresar_imagen1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        btn_consultar = new javax.swing.JButton();
        btn_modificar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btn_ingresar = new javax.swing.JButton();
        jSeparator14 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        txtResInc1 = new javax.swing.JTextField();
        txtResCorrecta = new javax.swing.JTextField();
        txtResInc3 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtResInc2 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableJuegoLab = new javax.swing.JTable();
        btn_Eliminar = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        JMenu3puntitosPsicologo = new javax.swing.JMenu();
        JMnItmCerrarPsicologo = new javax.swing.JMenuItem();
        JMnPgPrinPsicolo = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 100, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setBorder(null);
        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setToolTipText("");
        jScrollPane3.setDoubleBuffered(true);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMinimumSize(new java.awt.Dimension(633, 1065));
        jPanel3.setPreferredSize(new java.awt.Dimension(633, 1065));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LblInfor2Niño.setFont(new java.awt.Font("Rockwell Nova", 1, 14)); // NOI18N
        LblInfor2Niño.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblInfor2Niño.setText("Juego del Laberinto");
        jPanel3.add(LblInfor2Niño, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 10, 170, -1));

        lbl_ImagenLab.setForeground(new java.awt.Color(204, 204, 204));
        lbl_ImagenLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbl_ImagenLab.setText(" Ingresar Imagen");
        lbl_ImagenLab.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel3.add(lbl_ImagenLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 450, 290));

        btn_Ingresar_imagen1.setText("Ingresar Imagen");
        btn_Ingresar_imagen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Ingresar_imagen1ActionPerformed(evt);
            }
        });
        jPanel3.add(btn_Ingresar_imagen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, 160, -1));
        jPanel3.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 170, 10));

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel6.setText("Ingrese las opcion de respuesta correcta:");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 590, -1, -1));
        jPanel3.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 440, 470, 10));
        jPanel3.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 580, 10));

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel7.setText("Descripción:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        btn_consultar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_consultar.setText("Consultar");
        btn_consultar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_consultarMouseClicked(evt);
            }
        });
        btn_consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_consultarActionPerformed(evt);
            }
        });
        jPanel3.add(btn_consultar, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 1000, 100, -1));

        btn_modificar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_modificar.setText("Modificar");
        btn_modificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_modificarMouseClicked(evt);
            }
        });
        btn_modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_modificarActionPerformed(evt);
            }
        });
        jPanel3.add(btn_modificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 1000, 100, -1));

        btnActualizar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnActualizarMouseClicked(evt);
            }
        });
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel3.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 1000, 100, -1));

        btn_ingresar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_ingresar.setText("Ingresar Juego");
        btn_ingresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ingresarMouseClicked(evt);
            }
        });
        btn_ingresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ingresarActionPerformed(evt);
            }
        });
        jPanel3.add(btn_ingresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 620, 150, -1));
        jPanel3.add(jSeparator14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 1040, 600, 10));

        jLabel8.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel8.setText("Ingrese la imagen del laberinto");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 100, -1, -1));

        txtDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionActionPerformed(evt);
            }
        });
        jPanel3.add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 50, 400, -1));
        jPanel3.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 130, 480, 10));

        txtResInc1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResInc1ActionPerformed(evt);
            }
        });
        jPanel3.add(txtResInc1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 540, 80, -1));
        jPanel3.add(txtResCorrecta, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 590, 100, -1));
        jPanel3.add(txtResInc3, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 540, 80, -1));

        jLabel9.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel9.setText("Ingrese las opciones de respuesta incorrectas:");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 500, -1, -1));

        txtResInc2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtResInc2ActionPerformed(evt);
            }
        });
        jPanel3.add(txtResInc2, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 540, 80, -1));

        jTableJuegoLab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo_Juego", "Descripción", "RutaImagen", "Incorrecta 1", "Incorrecta 2", "Incorrecta 3", "Correcta"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableJuegoLab);

        jPanel3.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 660, 600, 320));

        btn_Eliminar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_Eliminar.setText("Eliminar");
        btn_Eliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_EliminarMouseClicked(evt);
            }
        });
        btn_Eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EliminarActionPerformed(evt);
            }
        });
        jPanel3.add(btn_Eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 1000, 100, -1));

        jScrollPane3.setViewportView(jPanel3);

        jPanel2.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 450));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 650, 450));

        btnExit.setText("x");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        jPanel1.add(btnExit, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 0, 40, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoJuegosRepresentante.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(-870, -110, 1860, 680));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoClaro.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 500));

        JMenu3puntitosPsicologo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TresPuntitos.png"))); // NOI18N

        JMnItmCerrarPsicologo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        JMnItmCerrarPsicologo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CerrarSesion.png"))); // NOI18N
        JMnItmCerrarPsicologo.setText("Cerrar Sesión");
        JMnItmCerrarPsicologo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JMnItmCerrarPsicologoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JMnItmCerrarPsicologoMousePressed(evt);
            }
        });
        JMenu3puntitosPsicologo.add(JMnItmCerrarPsicologo);

        jMenuBar1.add(JMenu3puntitosPsicologo);

        JMnPgPrinPsicolo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Casita.png"))); // NOI18N
        JMnPgPrinPsicolo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JMnPgPrinPsicoloMouseClicked(evt);
            }
        });
        jMenuBar1.add(JMnPgPrinPsicolo);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JMnPgPrinPsicoloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnPgPrinPsicoloMouseClicked
        //Base.close();
        PagPrincipalPsicologo principal = new PagPrincipalPsicologo();
        principal.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_JMnPgPrinPsicoloMouseClicked

    private void JMnItmCerrarPsicologoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnItmCerrarPsicologoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JMnItmCerrarPsicologoMouseClicked

    private void JMnItmCerrarPsicologoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnItmCerrarPsicologoMousePressed
        //Base.close();
        InicioPsicologo loginPsicologo = new InicioPsicologo();
        loginPsicologo.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_JMnItmCerrarPsicologoMousePressed

    private void btn_ingresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ingresarActionPerformed

        Juego_Laberinto Juego_Lab = new Juego_Laberinto();

// Verificar que los campos obligatorios no sean nulos o vacíos
        if (!txtDescripcion.getText().isEmpty()&& !txtResInc1.getText().isEmpty()&& !txtResInc2.getText().isEmpty()&& !txtResInc3.getText().isEmpty() && !txtResCorrecta.getText().isEmpty()&& imagen != null&& !rutaImagen.isEmpty()) {

            // Configurar los campos del juego
            String codigoJLab = CalcularIDJuego(Base);
            Juego_Lab.setCod_Juego(codigoJLab);
            Juego_Lab.setFK_CodPsicologo(RegistrarsePariente.Calcular_cod_Representante(Base));
            Juego_Lab.setDescripcion_Juego(txtDescripcion.getText());
            Juego_Lab.setRespuestas_Incorrecta1(txtResInc1.getText().charAt(0));
            Juego_Lab.setRespuestas_Incorrecta2(txtResInc2.getText().charAt(0));
            Juego_Lab.setRespuestas_Incorrecta3(txtResInc3.getText().charAt(0));
            Juego_Lab.setRespuesta_Correcta(txtResCorrecta.getText().charAt(0));
            Juego_Lab.setImagen_Lab(imagen);
            Juego_Lab.setRutaImagen(rutaImagen);

            // Almacenar en la base de datos
            Base.store(Juego_Lab);
            javax.swing.JOptionPane.showMessageDialog(this, "SE GUARDÓ EN LA BASE");
            MostrarDatos(Base);

        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos antes de guardar en la base.");
        }

    }//GEN-LAST:event_btn_ingresarActionPerformed

    private void btn_ingresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ingresarMouseClicked

    }//GEN-LAST:event_btn_ingresarMouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        jTableJuegoLab.setVisible(true);
        MostrarDatos(Base);
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnActualizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnActualizarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnActualizarMouseClicked

    private void btn_modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_modificarActionPerformed
          try {
        // Obtener el código del juego que se desea modificar
        String codigoJuego = JOptionPane.showInputDialog(this, "Ingrese el código del juego a modificar:");

        if (codigoJuego != null && !codigoJuego.isEmpty()) {
            // Buscar el juego con el código proporcionado
            int indiceJuego = buscarJuegoPorCodigo(codigoJuego);

            if (indiceJuego != -1) {
                // Se encontró el juego, obtener datos actuales
                DefaultTableModel modelo = (DefaultTableModel) jTableJuegoLab.getModel();
                String nuevaDescripcion = JOptionPane.showInputDialog(this, "Ingrese la nueva descripción:", modelo.getValueAt(indiceJuego, 1));
                String nuevaOpcion1 = JOptionPane.showInputDialog(this, "Ingrese la nueva opción incorrecta 1:", modelo.getValueAt(indiceJuego, 3));
                String nuevaOpcion2 = JOptionPane.showInputDialog(this, "Ingrese la nueva opción incorrecta 2:", modelo.getValueAt(indiceJuego, 4));
                String nuevaOpcion3 = JOptionPane.showInputDialog(this, "Ingrese la nueva opción incorrecta 3:", modelo.getValueAt(indiceJuego, 5));
                String nuevaOpCorrecta = JOptionPane.showInputDialog(this, "Ingrese la nueva opción correcta:", modelo.getValueAt(indiceJuego, 6));

                if (nuevaDescripcion != null && nuevaOpcion1 != null && nuevaOpcion2 != null && nuevaOpcion3 != null && nuevaOpCorrecta != null) {
                    byte[] nuevaImagen1 = obtenerNuevaImagen();

                    // Modificar el juego con los nuevos valores
                    Modificar_Juego(Base, codigoJuego, nuevaDescripcion, nuevaOpcion1.charAt(0), nuevaOpcion2.charAt(0), nuevaOpcion3.charAt(0), nuevaOpCorrecta.charAt(0), nuevaImagen1);
                    MostrarDatos(Base);
                } else {
                    JOptionPane.showMessageDialog(this, "Error: Todos los campos deben ser ingresados.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Error: No se encontró el juego con el código proporcionado.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código válido para modificar.");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al modificar: " + e.getMessage());
    }
        
    }//GEN-LAST:event_btn_modificarActionPerformed

    private int buscarJuegoPorCodigo(String codigoJuego) {
    DefaultTableModel modelo = (DefaultTableModel) jTableJuegoLab.getModel();
    for (int i = 0; i < modelo.getRowCount(); i++) {
        String codigoActual = (String) modelo.getValueAt(i, 0);
        if (codigoActual.equals(codigoJuego)) {
            return i; // Se encontró el cuento, devolver el índice de la fila
        }
    }
    return -1;
}
    private void btn_modificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_modificarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_modificarMouseClicked

    private byte[] obtenerNuevaImagen() {
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Seleccione la nueva imagen");

        int result = fileChooser.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                File selectedFile = fileChooser.getSelectedFile();
                return Files.readAllBytes(selectedFile.toPath());
            } catch (IOException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Error al leer la nueva imagen.");
            }
        }

        return null;
    }
    
    private void btn_consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_consultarActionPerformed
        String codigoAConsultar = JOptionPane.showInputDialog(this, "Ingrese el código a consultar");

        if (codigoAConsultar != null && !codigoAConsultar.isEmpty()) {
            ConsultarRegistro(Base, codigoAConsultar);
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código válido para consultar.");
        }
    }//GEN-LAST:event_btn_consultarActionPerformed

    private void btn_consultarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_consultarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_consultarMouseClicked

    private void btn_Ingresar_imagen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Ingresar_imagen1ActionPerformed
        if (seleccionar.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {
            File archivo = seleccionar.getSelectedFile();
            if (archivo.getName().endsWith("jpg") || archivo.getName().endsWith("jpeg") || archivo.getName().endsWith("png") || archivo.getName().endsWith("gif")) {
                imagen = AbrirArchivo(archivo);

                // Convierte el array de bytes a un objeto Image
                Image imagenOriginal = convertirBytesAImagen(imagen);

                // Redimensiona la imagen a 96x15
                Image imagenRedimensionada = imagenOriginal.getScaledInstance(450, 290, Image.SCALE_SMOOTH);

                // Crea un ImageIcon a partir de la imagen redimensionada
                ImageIcon iconoRedimensionado = new ImageIcon(imagenRedimensionada);

                lbl_ImagenLab.setIcon(iconoRedimensionado);

                // Almacena la ruta del archivo seleccionado en la variable rutaImagenInicial
                rutaImagen = archivo.getAbsolutePath();
            } else {
                JOptionPane.showMessageDialog(null, "Archivo no compatible");
            }
        }
    }//GEN-LAST:event_btn_Ingresar_imagen1ActionPerformed

    private void txtDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionActionPerformed

    private void btn_EliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_EliminarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_EliminarMouseClicked

    private void btn_EliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EliminarActionPerformed
        String codigoAEliminar = JOptionPane.showInputDialog(this, "Ingrese el código a eliminar:");

        if (codigoAEliminar != null && !codigoAEliminar.isEmpty()) {
            EliminarRegistro(Base, codigoAEliminar);
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código válido para eliminar.");
        }
    }//GEN-LAST:event_btn_EliminarActionPerformed

    private void txtResInc1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResInc1ActionPerformed

    }//GEN-LAST:event_txtResInc1ActionPerformed

    private void txtResInc2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtResInc2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtResInc2ActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed

        System.exit(0);
    }//GEN-LAST:event_btnExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pag_Crud_JLaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pag_Crud_JLaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pag_Crud_JLaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pag_Crud_JLaberinto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pag_Crud_JLaberinto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu JMenu3puntitosPsicologo;
    private javax.swing.JMenuItem JMnItmCerrarPsicologo;
    private javax.swing.JMenu JMnPgPrinPsicolo;
    private javax.swing.JLabel LblInfor2Niño;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btn_Eliminar;
    private javax.swing.JButton btn_Ingresar_imagen1;
    private javax.swing.JButton btn_consultar;
    private javax.swing.JButton btn_ingresar;
    private javax.swing.JButton btn_modificar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator14;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JTable jTableJuegoLab;
    private javax.swing.JLabel lbl_ImagenLab;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtResCorrecta;
    private javax.swing.JTextField txtResInc1;
    private javax.swing.JTextField txtResInc2;
    private javax.swing.JTextField txtResInc3;
    // End of variables declaration//GEN-END:variables

    public static String CalcularIDJuego(ObjectContainer Base) {

        boolean rest = true;
        int Incremental = 0;
        String Codigo;
        do {

            Incremental++;

            Codigo = String.format("JLAB-%04d", Incremental);

            if (Verificar_Jlab(Base, Codigo) == 0) {
                rest = false;
            }

        } while (rest);

        return Codigo;
    }

    public static int Verificar_Jlab(ObjectContainer Base, String Codigo) {
        Juego_Laberinto miJLab = new Juego_Laberinto();
        miJLab.setCod_Juego(Codigo);
        ObjectSet result = Base.get(miJLab);

        return result.size();

    }

    public byte[] AbrirArchivo(File archivo) {
        try ( FileInputStream entrada = new FileInputStream(archivo)) {
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buffer = new byte[1024];
            int bytesRead;
            while ((bytesRead = entrada.read(buffer)) != -1) {
                baos.write(buffer, 0, bytesRead);
            }
            return baos.toByteArray();
        } catch (IOException e) {
            e.printStackTrace();
            return null;  // Devuelve null si hay algún error al leer la imagen
        }
    }

    private Image convertirBytesAImagen(byte[] bytes) {
        ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
        try {
            return ImageIO.read(bis);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }

    public void MostrarDatos(ObjectContainer Base) {

        Juego_Laberinto mostrarJuegoLab = new Juego_Laberinto();
        ObjectSet result = Base.get(mostrarJuegoLab);

        DefaultTableModel modelo = (DefaultTableModel) jTableJuegoLab.getModel();

        // Limpiar el modelo antes de agregar nuevas filas
        modelo.setRowCount(0);

        while (result.hasNext()) {
            Juego_Laberinto miJuegoLab = (Juego_Laberinto) result.next();
            modelo.addRow(new Object[]{
                miJuegoLab.getCod_Juego(),
                miJuegoLab.getDescripcion_Juego(),
                miJuegoLab.getRutaImagen(),
                miJuegoLab.getRespuestas_Incorrecta1(),
                miJuegoLab.getRespuestas_Incorrecta2(),
                miJuegoLab.getRespuestas_Incorrecta3(),
                miJuegoLab.getRespuesta_Correcta()

            });
        }

    }

    private void ConsultarRegistro(ObjectContainer base, String CodLab) {

        // Creando un objeto de ejemplo para la consulta
        Juego_Laberinto juegolab = new Juego_Laberinto(CodLab, null, null, '\0', '\0', '\0', '\0', null, null);

        // Consultando la base de datos
        ObjectSet result = base.queryByExample(juegolab);

        if (result.hasNext()) {
            // Manejando el resultado (puedes querer mostrarlo o procesarlo)
            Juego_Laberinto registroConsultado = (Juego_Laberinto) result.next();
            System.out.println("Registro consultado: " + registroConsultado);
            JOptionPane.showMessageDialog(this, "El registro se ha consultado con éxito");

            // Llamar al método ConsultarDatos para mostrar el registro en la tabla
            MostrarDatos(Base);
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró el registro en la base de datos");
        }
    }

   public void Modificar_Juego(ObjectContainer base, String Codigo,String Descripcion, char opcionin1, char opcionin2, char opcionin3, char opcioncorr, byte[] NuevaImagen1) {
        try {
        Juego_Laberinto juego = new Juego_Laberinto();
        juego.setCod_Juego(Codigo);

        ObjectSet result = base.queryByExample(juego);

        if (result.hasNext()) {
            Juego_Laberinto nuevoJuego = (Juego_Laberinto) result.next();

            nuevoJuego.setDescripcion_Juego(Descripcion);
            nuevoJuego.setRespuestas_Incorrecta1(opcionin1);
            nuevoJuego.setRespuestas_Incorrecta2(opcionin2);
            nuevoJuego.setRespuestas_Incorrecta3(opcionin3);
            nuevoJuego.setRespuesta_Correcta(opcioncorr);

            if (NuevaImagen1 != null) {
                nuevoJuego.setImagen_Lab(NuevaImagen1);
            }

            base.store(nuevoJuego);
            JOptionPane.showMessageDialog(this, "Se modificó el juego correctamente.");
        } else {
            JOptionPane.showMessageDialog(this, "Error: No se encontró el juego para modificar.");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al modificar el juego: " + e.getMessage());
    }
    }

    public void ValidaDescripcion(String Descripcion) throws Exception {
        // La expresión regular permite letras mayúsculas y minúsculas.
        if (!Descripcion.matches("^[A-Za-z]+\\s[0-9\\s]+$")) {
            throw new Exception("Ingrese una descripcion válida.");
        }
    }

    private void EliminarRegistro(ObjectContainer base, String Cod_Lab) {

        Juego_Laberinto elimJue = new Juego_Laberinto(Cod_Lab, null, null, '\0', '\0', '\0', '\0', null, null);

        // Mensaje de depuración
        System.out.println("Buscando el registro en la base de datos...");

        ObjectSet result = base.queryByExample(elimJue);

        if (result.hasNext()) {
            // Mensaje de depuración
            System.out.println("Eliminando el registro de la base de datos...");

            base.delete(result.next());
            JOptionPane.showMessageDialog(this, "El registro ha sido eliminado con éxito");
            MostrarDatos(base); // Actualizar la tabla después de la eliminación
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró el registro en la base de datos");
        }
    }

}
