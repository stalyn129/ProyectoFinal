/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;

import Clases.ValoracionInfoNiño;
import Clases.ValoracionInfoRepre;
import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.ext.Db4oIOException;
import com.db4o.query.Predicate;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Usuario
 */
public class Reporte_Informacion extends javax.swing.JFrame {

    ObjectContainer Base;

    public Reporte_Informacion() {
        initComponents();
        Base = Db4o.openFile("src/BBDD/BaseDat.yap");
        MostrarDatosInfoRepre(Base);
        MostrarDatoInfoNiño(Base);
        mostrar_diagrama_infoRepre();
        mostrar_diagrama_infoNiño();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableInformacion = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();
        PanelGraficoPadre = new javax.swing.JPanel();
        btnConsultar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableInfoniño = new javax.swing.JTable();
        btnActualizar1 = new javax.swing.JButton();
        btnConsultar1 = new javax.swing.JButton();
        btnEliminar1 = new javax.swing.JButton();
        PanelGraficoNiño = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        LblTestPariente2 = new javax.swing.JLabel();
        LblTestPariente1 = new javax.swing.JLabel();
        BtnCerrarPagina = new javax.swing.JButton();
        BtnRegresar = new javax.swing.JButton();
        btnMinimizar2 = new javax.swing.JButton();
        Fondo1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jTableInformacion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod_Respuesta", "Cod_Representante", "Cod_Informacion", "Valoracion", "Fecha Valoracion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableInformacion);

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelGraficoPadreLayout = new javax.swing.GroupLayout(PanelGraficoPadre);
        PanelGraficoPadre.setLayout(PanelGraficoPadreLayout);
        PanelGraficoPadreLayout.setHorizontalGroup(
            PanelGraficoPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        PanelGraficoPadreLayout.setVerticalGroup(
            PanelGraficoPadreLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        btnConsultar.setText("Consultar");
        btnConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnActualizar)
                        .addGap(101, 101, 101)
                        .addComponent(btnConsultar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar)
                        .addGap(46, 46, 46)))
                .addComponent(PanelGraficoPadre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnActualizar)
                            .addComponent(btnConsultar)
                            .addComponent(btnEliminar)))
                    .addComponent(PanelGraficoPadre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reporte Informacion Representante", jPanel1);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jTableInfoniño.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod_Respuestas", "Cod_Niño", "Cod_Información", "Valoracion", "Fecha Valoracion"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTableInfoniño);

        btnActualizar1.setText("Actualizar");
        btnActualizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizar1ActionPerformed(evt);
            }
        });

        btnConsultar1.setText("Consultar");
        btnConsultar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultar1ActionPerformed(evt);
            }
        });

        btnEliminar1.setText("Eliminar");
        btnEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelGraficoNiñoLayout = new javax.swing.GroupLayout(PanelGraficoNiño);
        PanelGraficoNiño.setLayout(PanelGraficoNiñoLayout);
        PanelGraficoNiñoLayout.setHorizontalGroup(
            PanelGraficoNiñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 250, Short.MAX_VALUE)
        );
        PanelGraficoNiñoLayout.setVerticalGroup(
            PanelGraficoNiñoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 270, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 488, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(btnActualizar1)
                        .addGap(101, 101, 101)
                        .addComponent(btnConsultar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnEliminar1)
                        .addGap(46, 46, 46)))
                .addComponent(PanelGraficoNiño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnActualizar1)
                            .addComponent(btnConsultar1)
                            .addComponent(btnEliminar1)))
                    .addComponent(PanelGraficoNiño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Reporte Informacion niño", jPanel2);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 780, 350));

        jLabel9.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ni Uno Mas-Logo-1 (1).png"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 70));

        LblTestPariente2.setFont(new java.awt.Font("Rockwell Nova", 1, 14)); // NOI18N
        LblTestPariente2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblTestPariente2.setText("REPORTE INFORMACIÓN");
        getContentPane().add(LblTestPariente2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 50, 350, 30));

        LblTestPariente1.setFont(new java.awt.Font("Rockwell Nova", 1, 18)); // NOI18N
        LblTestPariente1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblTestPariente1.setText("BIENVENIDO AL AREA DE:");
        getContentPane().add(LblTestPariente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 350, 20));

        BtnCerrarPagina.setBackground(new java.awt.Color(255, 255, 255));
        BtnCerrarPagina.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 18)); // NOI18N
        BtnCerrarPagina.setText("x");
        BtnCerrarPagina.setToolTipText("Cerrar Pagina dando click aqui");
        BtnCerrarPagina.setBorder(null);
        BtnCerrarPagina.setOpaque(false);
        BtnCerrarPagina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnCerrarPaginaMouseClicked(evt);
            }
        });
        BtnCerrarPagina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCerrarPaginaActionPerformed(evt);
            }
        });
        getContentPane().add(BtnCerrarPagina, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 0, 30, 30));

        BtnRegresar.setBackground(new java.awt.Color(255, 255, 255));
        BtnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/atras.png"))); // NOI18N
        BtnRegresar.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        BtnRegresar.setOpaque(false);
        BtnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegresarActionPerformed(evt);
            }
        });
        getContentPane().add(BtnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 440, 50, 40));

        btnMinimizar2.setBackground(new java.awt.Color(255, 255, 255));
        btnMinimizar2.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 18)); // NOI18N
        btnMinimizar2.setText("—");
        btnMinimizar2.setToolTipText("Cerrar Pagina dando click aqui");
        btnMinimizar2.setBorder(null);
        btnMinimizar2.setOpaque(false);
        btnMinimizar2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMinimizar2MouseClicked(evt);
            }
        });
        btnMinimizar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinimizar2ActionPerformed(evt);
            }
        });
        getContentPane().add(btnMinimizar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 0, 30, 30));

        Fondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoGeneralReportes.png"))); // NOI18N
        Fondo1.setPreferredSize(new java.awt.Dimension(800, 500));
        getContentPane().add(Fondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-870, -50, 1670, 560));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoClaro.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -10, 800, 490));

        jMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TresPuntitos.png"))); // NOI18N
        jMenu1.setToolTipText("Configuracion");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CerrarSesion.png"))); // NOI18N
        jMenuItem1.setText("Cerrar Sesión");
        jMenuItem1.setToolTipText("Cierra la sesión iniciada");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Casita.png"))); // NOI18N
        jMenu2.setToolTipText("Regresa a la página principal");
        jMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu2MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        MostrarDatosInfoRepre(Base);
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarActionPerformed
        String[] opciones = {"Código", "Código Representante", "Código Consejo"};
        int seleccion = JOptionPane.showOptionDialog(this, "Seleccione el método de búsqueda:", "Método de Búsqueda", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);

        if (seleccion != -1) {
            String consulta = "";

            if (seleccion == 0) {
                // Búsqueda por código
                consulta = JOptionPane.showInputDialog(this, "Ingrese el código a consultar");
            } else if (seleccion == 1) {
                // Búsqueda por código niño
                consulta = JOptionPane.showInputDialog(this, "Ingrese el código Represnetante a consultar");
            } else if (seleccion == 2) {
                // Búsqueda por código miniJuego
                consulta = JOptionPane.showInputDialog(this, "Ingrese el código de informacion a consultar");
            }

            if (consulta != null && !consulta.isEmpty()) {
                ConsultarRegistro(Base, consulta, seleccion);
            } else {
                JOptionPane.showMessageDialog(this, "Debe ingresar un valor válido para la consulta.");
            }
        }
    }//GEN-LAST:event_btnConsultarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String codigoAEliminar = JOptionPane.showInputDialog(this, "Ingrese el código a eliminar:");

        if (codigoAEliminar != null && !codigoAEliminar.isEmpty()) {
            EliminarRegistro(Base, codigoAEliminar);
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código válido para eliminar.");
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void BtnCerrarPaginaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnCerrarPaginaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnCerrarPaginaMouseClicked

    private void BtnCerrarPaginaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCerrarPaginaActionPerformed
        System.exit(0);
    }//GEN-LAST:event_BtnCerrarPaginaActionPerformed

    private void BtnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegresarActionPerformed

        Base.close();
        Reportes repor = new Reportes();
        repor.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BtnRegresarActionPerformed

    private void btnActualizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizar1ActionPerformed
        MostrarDatoInfoNiño(Base);
    }//GEN-LAST:event_btnActualizar1ActionPerformed

    private void btnConsultar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultar1ActionPerformed
        String[] opciones = {"Código", "Código Niño", "Código Consejo"};
        int seleccion = JOptionPane.showOptionDialog(this, "Seleccione el método de búsqueda:", "Método de Búsqueda", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);

        if (seleccion != -1) {
            String consulta = "";

            if (seleccion == 0) {
                // Búsqueda por código
                consulta = JOptionPane.showInputDialog(this, "Ingrese el código a consultar");
            } else if (seleccion == 1) {
                // Búsqueda por código niño
                consulta = JOptionPane.showInputDialog(this, "Ingrese el código niño a consultar");
            } else if (seleccion == 2) {
                // Búsqueda por código miniJuego
                consulta = JOptionPane.showInputDialog(this, "Ingrese el código miniJuego a consultar");
            }

            if (consulta != null && !consulta.isEmpty()) {
                ConsultarRegistroInfoNiño(Base, consulta, seleccion);
            } else {
                JOptionPane.showMessageDialog(this, "Debe ingresar un valor válido para la consulta.");
            }
        }
    }//GEN-LAST:event_btnConsultar1ActionPerformed

    private void btnEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminar1ActionPerformed
       String codigoAEliminar = JOptionPane.showInputDialog(this, "Ingrese el código a eliminar:");

        if (codigoAEliminar != null && !codigoAEliminar.isEmpty()) {
            EliminarRegistroInfoniño(Base, codigoAEliminar);
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código válido para eliminar.");
        }
    }//GEN-LAST:event_btnEliminar1ActionPerformed

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
        Base.close();
        IniciaAdmin loginadmin = new IniciaAdmin();
        loginadmin.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1MousePressed

    private void jMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu2MouseClicked
        Base.close();
        PagPrincipalAdmin paginaprinciadmi = new PagPrincipalAdmin();
        paginaprinciadmi.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenu2MouseClicked

    private void btnMinimizar2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizar2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btnMinimizar2MouseClicked

    private void btnMinimizar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinimizar2ActionPerformed
        this.setState(Reporte_Informacion.ICONIFIED);
    }//GEN-LAST:event_btnMinimizar2ActionPerformed

   private void ConsultarRegistro(ObjectContainer Base, String consulta, int tipoConsulta) {
        // Creando un objeto de ejemplo para la consulta
        ValoracionInfoRepre ejemploConsulta = new ValoracionInfoRepre(null, null, null, null, null);

        // Consultando la base de datos
        ObjectSet result;

        try {
            // Verificar el tipo de consulta para decidir qué campo usar
            if (tipoConsulta == 0) {
                // Búsqueda por código
                ejemploConsulta.setCod_Respuesta_usuario(consulta);
                result = Base.queryByExample(ejemploConsulta);
            } else if (tipoConsulta == 1) {
                // Búsqueda por código niño
                ejemploConsulta.setFK_cod_Representante(consulta);
                result = Base.queryByExample(ejemploConsulta);
            } else if (tipoConsulta == 2) {
                // Búsqueda por código miniJuego
                ejemploConsulta.setFk_Cod_Infor(consulta);
                result = Base.queryByExample(ejemploConsulta);
            } else {
                // Tipo de consulta no válido
                JOptionPane.showMessageDialog(this, "Tipo de consulta no válido");
                return;
            }

            if (result.hasNext()) {
                // Mostrar o procesar los registros encontrados
                List<ValoracionInfoRepre> registrosConsultados = new ArrayList<>();
                while (result.hasNext()) {
                    ValoracionInfoRepre registroConsultado = (ValoracionInfoRepre) result.next();
                    System.out.println("Registro consultado: " + registroConsultado);
                    registrosConsultados.add(registroConsultado);
                }
                JOptionPane.showMessageDialog(this, "Registros consultados con éxito");

                // Llamar al método ConsultarDatos pasando la lista de registros consultados
                ConsultarDatos(Base, registrosConsultados);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontraron registros en la base de datos");
            }
        } catch (Db4oIOException ex) {
            // Manejar la excepción aquí, puedes mostrar un mensaje de error o realizar otras acciones
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al realizar la consulta en la base de datos");
        }
    }

    private void ConsultarDatos(ObjectContainer Base, List<ValoracionInfoRepre> registrosConsultados) {
        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) jTableInformacion.getModel();

        // Limpiar el modelo antes de agregar nuevas filas
        modelo.setRowCount(0);

        if (!registrosConsultados.isEmpty()) {
            for (ValoracionInfoRepre registroConsultado : registrosConsultados) {
                modelo.addRow(new Object[]{
                    registroConsultado.getCod_Respuesta_usuario(),
                    registroConsultado.getFK_cod_Representante(),
                    registroConsultado.getFk_Cod_Infor(),
                    registroConsultado.getRespuesta(),
                    registroConsultado.getFecha_respuesta(),});
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron registros en la base de datos");
        }
    }

    private void EliminarRegistro(ObjectContainer Base, String Cod_Info) {

        ValoracionInfoRepre info = new ValoracionInfoRepre(Cod_Info, null, null, null, null);

        // Mensaje de depuración
        System.out.println("Buscando el registro en la base de datos...");

        ObjectSet result = Base.queryByExample(info);

        if (result.hasNext()) {
            // Mensaje de depuración
            System.out.println("Eliminando el registro de la base de datos...");

            Base.delete(result.next());
            JOptionPane.showMessageDialog(this, "El registro ha sido eliminado con éxito");
            MostrarDatosInfoRepre(Base); // Actualizar la tabla después de la eliminación
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró el registro en la base de datos");
        }
    }
    
   

    public void MostrarDatosInfoRepre(ObjectContainer Base) {
        ValoracionInfoRepre puntu = new ValoracionInfoRepre();
        ObjectSet result = Base.get(puntu);

        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) jTableInformacion.getModel();

        // Limpiar el modelo antes de agregar nuevas filas
        modelo.setRowCount(0);

        while (result.hasNext()) {
            ValoracionInfoRepre mivalo = (ValoracionInfoRepre) result.next();
            modelo.addRow(new Object[]{
                mivalo.getCod_Respuesta_usuario(),
                mivalo.getFK_cod_Representante(),
                mivalo.getFk_Cod_Infor(),
                mivalo.getRespuesta(),
                mivalo.getFecha_respuesta(),});
        }

    }

    public void ConsultarDatos(ObjectContainer Base, ValoracionInfoRepre consulta) {
        DefaultTableModel modelo = (DefaultTableModel) jTableInformacion.getModel();

        // Limpiar el modelo antes de agregar nuevas filas
        modelo.setRowCount(0);

        if (consulta != null) {
            // Agregar el registro consultado a la tabla
            modelo.addRow(new Object[]{
                consulta.getCod_Respuesta_usuario(),
                consulta.getFK_cod_Representante(),
                consulta.getFk_Cod_Infor(),
                consulta.getRespuesta(),
                consulta.getFecha_respuesta()
            });
        }
    }

    //Aqui Termina
    //Metodos Informacion
    private void ConsultarRegistroInfoNiño(ObjectContainer Base, String consulta, int tipoConsulta) {
        // Creando un objeto de ejemplo para la consulta
        ValoracionInfoNiño ejemploConsulta = new ValoracionInfoNiño(null, null, null, null, null);

        // Consultando la base de datos
        ObjectSet result;

        try {
            // Verificar el tipo de consulta para decidir qué campo usar
            if (tipoConsulta == 0) {
                // Búsqueda por código
                ejemploConsulta.setCod_Respuesta_usuario(consulta);
                result = Base.queryByExample(ejemploConsulta);
            } else if (tipoConsulta == 1) {
                // Búsqueda por código niño
                ejemploConsulta.setFk_cod_niño(consulta);
                result = Base.queryByExample(ejemploConsulta);
            } else if (tipoConsulta == 2) {
                // Búsqueda por código miniJuego
                ejemploConsulta.setFk_Cod_info(consulta);
                result = Base.queryByExample(ejemploConsulta);
            } else {
                // Tipo de consulta no válido
                JOptionPane.showMessageDialog(this, "Tipo de consulta no válido");
                return;
            }

            if (result.hasNext()) {
                // Mostrar o procesar los registros encontrados
                List<ValoracionInfoNiño> registrosConsultados = new ArrayList<>();
                while (result.hasNext()) {
                    ValoracionInfoNiño registroConsultado = (ValoracionInfoNiño) result.next();
                    System.out.println("Registro consultado: " + registroConsultado);
                    registrosConsultados.add(registroConsultado);
                }
                JOptionPane.showMessageDialog(this, "Registros consultados con éxito");

                // Llamar al método ConsultarDatos pasando la lista de registros consultados
                ConsultarDatosInfoniño(Base, registrosConsultados);
            } else {
                JOptionPane.showMessageDialog(this, "No se encontraron registros en la base de datos");
            }
        } catch (Db4oIOException ex) {
            // Manejar la excepción aquí, puedes mostrar un mensaje de error o realizar otras acciones
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error al realizar la consulta en la base de datos");
        }
    }

    private void ConsultarDatosInfoniño(ObjectContainer Base, List<ValoracionInfoNiño> registrosConsultados) {
        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) jTableInfoniño.getModel();

        // Limpiar el modelo antes de agregar nuevas filas
        modelo.setRowCount(0);

        if (!registrosConsultados.isEmpty()) {
            for (ValoracionInfoNiño registroConsultado : registrosConsultados) {
                modelo.addRow(new Object[]{
                    registroConsultado.getCod_Respuesta_usuario(),
                    registroConsultado.getFk_cod_niño(),
                    registroConsultado.getFk_Cod_info(),
                    registroConsultado.getRespuesta(),
                    registroConsultado.getFecha_respuesta()
                });
            }
        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron registros en la base de datos");
        }
    }

    private void EliminarRegistroInfoniño(ObjectContainer base, String Cod_Lab) {

        ValoracionInfoNiño cuen = new ValoracionInfoNiño(Cod_Lab, null, null, null, null);

        // Mensaje de depuración
        System.out.println("Buscando el registro en la base de datos...");

        ObjectSet result = base.queryByExample(cuen);

        if (result.hasNext()) {
            // Mensaje de depuración
            System.out.println("Eliminando el registro de la base de datos...");

            base.delete(result.next());
            JOptionPane.showMessageDialog(this, "El registro ha sido eliminado con éxito");
            MostrarDatoInfoNiño(base);
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró el registro en la base de datos");
        }
    }

    public void MostrarDatoInfoNiño(ObjectContainer Base) {
        ValoracionInfoNiño RespLab = new ValoracionInfoNiño();
        ObjectSet result = Base.get(RespLab);

        // Obtener el modelo de la tabla
        DefaultTableModel modelo = (DefaultTableModel) jTableInfoniño.getModel();

        // Limpiar el modelo antes de agregar nuevas filas
        modelo.setRowCount(0);

        while (result.hasNext()) {
            ValoracionInfoNiño miRespuesta = (ValoracionInfoNiño) result.next();
            modelo.addRow(new Object[]{
                miRespuesta.getCod_Respuesta_usuario(),
                miRespuesta.getFk_cod_niño(),
                miRespuesta.getFk_Cod_info(),
                miRespuesta.getRespuesta(),
                miRespuesta.getFecha_respuesta()
            });
        }

    }

    public void ConsultarDatosInfoniño(ObjectContainer base, ValoracionInfoNiño consulta) {
        DefaultTableModel modelo = (DefaultTableModel) jTableInfoniño.getModel();

        // Limpiar el modelo antes de agregar nuevas filas
        modelo.setRowCount(0);

        if (consulta != null) {
            // Agregar el registro consultado a la tabla
            modelo.addRow(new Object[]{
                consulta.getCod_Respuesta_usuario(),
                consulta.getFk_cod_niño(),
                consulta.getFk_Cod_info(),
                consulta.getRespuesta(),
                consulta.getFecha_respuesta()
            });
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ReporteConsejos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ReporteConsejos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ReporteConsejos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ReporteConsejos.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reporte_Informacion().setVisible(true);
            }
        });
    }

    public int num_si(ObjectContainer Base) {

        ValoracionInfoRepre puntu = new ValoracionInfoRepre();
        puntu.setRespuesta("SI");
        ObjectSet result = Base.get(puntu);
        return result.size();
    }

    public int num_No(ObjectContainer Base) {

        ValoracionInfoRepre puntu = new ValoracionInfoRepre();
        puntu.setRespuesta("NO");
        ObjectSet result = Base.get(puntu);
        return result.size();
    }

    public void mostrar_diagrama_infoRepre() {
        DefaultPieDataset datos = new DefaultPieDataset();
        datos.setValue("Si les gusto", num_si(Base));
        datos.setValue("No les gusto", num_No(Base));

        JFreeChart grafico_circular = ChartFactory.createPieChart("Numero de Respuestas", datos, true, true, false);
        ChartPanel panel = new ChartPanel(grafico_circular);
        panel.setMouseWheelEnabled(true);
        panel.setPreferredSize(new Dimension(310, 230));

        PanelGraficoPadre.setLayout(new BorderLayout());
        PanelGraficoPadre.add(panel, BorderLayout.NORTH);

        pack();
        repaint();
    }

    public int num_si_niño(ObjectContainer Base) {

        ValoracionInfoNiño puntu = new ValoracionInfoNiño();
        puntu.setRespuesta("SI");
        ObjectSet result = Base.get(puntu);
        return result.size();
    }

    public int num_No_niño(ObjectContainer Base) {

        ValoracionInfoNiño puntu = new ValoracionInfoNiño();
        puntu.setRespuesta("NO");
        ObjectSet result = Base.get(puntu);
        return result.size();
    }

    public void mostrar_diagrama_infoNiño() {
        DefaultPieDataset datos = new DefaultPieDataset();
        datos.setValue("Si les gusto", num_si_niño(Base));
        datos.setValue("No les gusto", num_No_niño(Base));

        JFreeChart grafico_circular = ChartFactory.createPieChart("Numero de Respuestas", datos, true, true, false);
        ChartPanel panel = new ChartPanel(grafico_circular);
        panel.setMouseWheelEnabled(true);
        panel.setPreferredSize(new Dimension(310, 230));

        PanelGraficoNiño.setLayout(new BorderLayout());
        PanelGraficoNiño.add(panel, BorderLayout.NORTH);

        pack();
        repaint();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnCerrarPagina;
    private javax.swing.JButton BtnRegresar;
    private javax.swing.JLabel Fondo1;
    private javax.swing.JLabel LblTestPariente1;
    private javax.swing.JLabel LblTestPariente2;
    private javax.swing.JPanel PanelGraficoNiño;
    private javax.swing.JPanel PanelGraficoPadre;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnActualizar1;
    private javax.swing.JButton btnConsultar;
    private javax.swing.JButton btnConsultar1;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminar1;
    private javax.swing.JButton btnMinimizar1;
    private javax.swing.JButton btnMinimizar2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableInfoniño;
    private javax.swing.JTable jTableInformacion;
    // End of variables declaration//GEN-END:variables
}
