/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;

import Clases.UserDataSingleton;
import Clases.*;
import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import java.awt.Color;
import java.awt.Component;
import java.awt.Cursor;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author alexa
 */
public class vincular_niño extends javax.swing.JFrame {
    private List<JButton> botones;
    private int indice;
    
    
    
    UserDataSingleton usarData;
    ObjectContainer Base;
    String codSoli = "";

    /**
     * Creates new form vincular_niño
     */
    public vincular_niño() {
        initComponents();
        ocColumna();
        usarData = UserDataSingleton.getInstance();
        Base = Db4o.openFile("src/BBDD/BaseDat.yap");
        Mostrar_tabla(Base);
        
        botones=new ArrayList<>();
        indice =0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jTabbedPane1__ = new javax.swing.JTabbedPane();
        pnl_soli = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_soli = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        txt_comentario = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        BtnRegresar1 = new javax.swing.JButton();
        LblTestPariente1 = new javax.swing.JLabel();
        LblTestPariente2 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Fondo1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        MenuGenerlNiño = new javax.swing.JMenuBar();
        JMnItmCerrarNiño2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        JMnPgPrinNiño2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 610, 30));

        pnl_soli.setBackground(new java.awt.Color(255, 255, 255));
        pnl_soli.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        pnl_soli.setMinimumSize(new java.awt.Dimension(615, 342));
        pnl_soli.setPreferredSize(new java.awt.Dimension(615, 342));
        pnl_soli.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabla_soli.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tabla_soli.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Cod", "REPRESENTANTE", "FECHA SOLICITUD", "ACEPTAR", "RECHAZAR"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_soli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_soliMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_soli);

        pnl_soli.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 570, 170));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 11)); // NOI18N
        jLabel2.setText("Tener en cuenta");
        pnl_soli.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 80, -1));

        jScrollPane2.setBorder(null);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("No aceptes solicitudes de gente extraña, asegurate de que\nes una persona conocidad, y si en caso se no serlo no \ntemas y ten confianza en rechararla.");
        jScrollPane2.setViewportView(jTextArea1);

        pnl_soli.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 270, 480, 60));
        pnl_soli.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 258, 590, 10));

        jScrollPane3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane3.setMinimumSize(new java.awt.Dimension(0, 0));

        txt_comentario.setColumns(20);
        txt_comentario.setRows(5);
        txt_comentario.setText("\n");
        txt_comentario.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jScrollPane3.setViewportView(txt_comentario);

        pnl_soli.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, 570, 40));

        jLabel3.setText("Aplastar la fila para mostrar el comentario");
        pnl_soli.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        jTabbedPane1__.addTab("Resi_soli", pnl_soli);

        jPanel1.add(jTabbedPane1__, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 610, 370));

        BtnRegresar1.setBackground(new java.awt.Color(255, 255, 255));
        BtnRegresar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/atras.png"))); // NOI18N
        BtnRegresar1.setToolTipText("Regresa al iniciar sesión");
        BtnRegresar1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        BtnRegresar1.setOpaque(false);
        BtnRegresar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegresar1ActionPerformed(evt);
            }
        });
        jPanel1.add(BtnRegresar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 440, 50, 40));

        LblTestPariente1.setFont(new java.awt.Font("Rockwell Nova", 1, 18)); // NOI18N
        LblTestPariente1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblTestPariente1.setText("BIENVENIDO AL AREA DE:");
        jPanel1.add(LblTestPariente1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 300, 20));

        LblTestPariente2.setFont(new java.awt.Font("Rockwell Nova", 1, 14)); // NOI18N
        LblTestPariente2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LblTestPariente2.setText("VINCULACIÓN");
        jPanel1.add(LblTestPariente2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 50, 210, 30));

        jLabel9.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ni Uno Mas-Logo-1 (1).png"))); // NOI18N
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 80, 70));

        Fondo1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoGeneralReportes.png"))); // NOI18N
        Fondo1.setPreferredSize(new java.awt.Dimension(800, 500));
        jPanel1.add(Fondo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-870, -10, 1670, 490));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoClaro.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 480));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        JMnItmCerrarNiño2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TresPuntitos.png"))); // NOI18N
        JMnItmCerrarNiño2.setToolTipText("Configuración");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setBackground(new java.awt.Color(255, 255, 255));
        jMenuItem1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CerrarSesion.png"))); // NOI18N
        jMenuItem1.setText("Cerrar Sesión");
        jMenuItem1.setToolTipText("Cierra la sesión iniciada");
        jMenuItem1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jMenuItem1MousePressed(evt);
            }
        });
        JMnItmCerrarNiño2.add(jMenuItem1);

        MenuGenerlNiño.add(JMnItmCerrarNiño2);

        JMnPgPrinNiño2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Casita.png"))); // NOI18N
        JMnPgPrinNiño2.setToolTipText("Regresa a la página principal");
        JMnPgPrinNiño2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JMnPgPrinNiño2MouseClicked(evt);
            }
        });
        MenuGenerlNiño.add(JMnPgPrinNiño2);

        setJMenuBar(MenuGenerlNiño);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItem1MousePressed
        Base.close();
        InicioNiño login = new InicioNiño();
        login.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jMenuItem1MousePressed

    private void JMnPgPrinNiño2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnPgPrinNiño2MouseClicked
        Base.close();
        PagPrincipalNiñ principalniño = new PagPrincipalNiñ();
        principalniño.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_JMnPgPrinNiño2MouseClicked

    private void BtnRegresar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegresar1ActionPerformed
        Base.close();
        PagPrincipalNiñ prin = new PagPrincipalNiñ();
        prin.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BtnRegresar1ActionPerformed

    private void tabla_soliMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_soliMousePressed
        int selecionTable = tabla_soli.getSelectedRow();
        codSoli = String.valueOf(tabla_soli.getValueAt(selecionTable, 0));

        if (!codSoli.isEmpty()) {

            most_comentario(Base, codSoli);
        }

        int column = tabla_soli.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY() / tabla_soli.getRowHeight();

        if (row < tabla_soli.getRowCount() && row >= 0 && column < tabla_soli.getColumnCount() && column >= 0) {
            Object value = tabla_soli.getValueAt(row, column);
            if (value instanceof JButton) {
                ((JButton) value).doClick();
                JButton boton = (JButton) value;

                if (boton.getName().equals("btn_Acept")) {
                    System.out.println("Click en el boton ACEPTAR");
                    estado_aceptado(Base, codSoli);
                    Mostrar_tabla(Base);
                }

                if (boton.getName().equals("btn_rechaz")) {
                    System.out.println("Click en el boton RECHAZAR");
                    estado_Rechazado(Base, codSoli);
                    Mostrar_tabla(Base);

                }

            }
        }
    }//GEN-LAST:event_tabla_soliMousePressed

    private void ocColumna() {

        // Obtén el TableColumnModel de la tabla
        TableColumnModel columnModel = tabla_soli.getColumnModel();

        // Obtiene la columna en función del índice proporcionado
        TableColumn columna = columnModel.getColumn(0);

        // Hace que la columna no sea visible
        columna.setMinWidth(0);
        columna.setMaxWidth(0);
        columna.setWidth(0);
        columna.setPreferredWidth(0);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(vincular_niño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(vincular_niño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(vincular_niño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(vincular_niño.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new vincular_niño().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnRegresar1;
    private javax.swing.JLabel Fondo1;
    private javax.swing.JMenu JMnItmCerrarNiño2;
    private javax.swing.JMenu JMnPgPrinNiño2;
    private javax.swing.JLabel LblTestPariente1;
    private javax.swing.JLabel LblTestPariente2;
    private javax.swing.JMenuBar MenuGenerlNiño;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1__;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JPanel pnl_soli;
    private javax.swing.JTable tabla_soli;
    private javax.swing.JTextArea txt_comentario;
    // End of variables declaration//GEN-END:variables

    /////////////////////////////////////////////////////////// FUNCION TABLA SOLICITUD ////////////////////////////////////////
    public void Mostrar_tabla(ObjectContainer Base) {
        try {
            tabla_soli.setDefaultRenderer(Object.class, new Render());

            solicitud soli = new solicitud();
            soli.setFKcod_niño(usarData.getCod_niño());
            soli.setEstado_solicitud1("Pendiente");
            ObjectSet result = Base.get(soli);

            DefaultTableModel modelo = (DefaultTableModel) tabla_soli.getModel();
            modelo.setRowCount(0);
            tabla_soli.setRowHeight(30);

            if (result.size() != 0) {
                while (result.hasNext()) {
                    JButton boton_1 = new JButton("ACEPTAR");
                    boton_1.setName("btn_Acept");
                    boton_1.setBackground(new Color(93, 255, 97)); // Establece el color de fondo del botón
                    boton_1.addActionListener(e -> {
                        // Cambia el color al hacer clic
                        boton_1.setBackground(new Color(204, 255, 242));
                    });

                    JButton boton_2 = new JButton("RECHAZAR");
                    boton_2.setName("btn_rechaz");
                    boton_2.setBackground(new Color(255, 12, 1)); // Establece el color de fondo del botón
                    boton_2.addActionListener(e -> {
                        // Cambia el color al hacer clic
                        boton_2.setBackground(new Color(204, 255, 242));
                    });

                    solicitud next = (solicitud) result.next();
                    modelo.addRow(new Object[]{
                        next.getCod_solicitud(),
                        next.getFKcod_representante(),
                        next.getFecha_soli(),
                        boton_1,
                        boton_2
                    });
                }
            } else {
                // Si no hay solicitudes, simplemente no hagas nada y termina la función
                return;
            }
        } catch (Exception e) {
            e.printStackTrace();
            // Manejo de la excepción, si es necesario.
        }
    }

    public void estado_aceptado(ObjectContainer Base, String codSoli) {
        if (!codSoli.isEmpty()) {
            solicitud soli = new solicitud();
            soli.setCod_solicitud(codSoli);

            ObjectSet result = Base.get(soli);

            while (result.hasNext()) {
                solicitud next = (solicitud) result.next();
                System.out.println("Cambia Acep: " + next.getCod_solicitud());
                next.setEstado_solicitud1("Aceptada");

                Base.store(next);
                Base.commit();

                JOptionPane.showMessageDialog(this, "Se ACEPTO la solicitud");

            }

        } else {

            System.out.println("Esta vacio el cod");
        }

    }

    public void estado_Rechazado(ObjectContainer Base, String codSoli) {
        if (!codSoli.isEmpty()) {
            solicitud soli = new solicitud();
            soli.setCod_solicitud(codSoli);

            ObjectSet result = Base.get(soli);

            while (result.hasNext()) {
                solicitud next = (solicitud) result.next();
                System.out.println("Cambia Rechaz: " + next.getCod_solicitud());
                next.setEstado_solicitud1("Rechazada");

                Base.store(next);
                Base.commit();

                JOptionPane.showMessageDialog(this, "RECHAZO la solicitud");

            }

        } else {

            System.out.println("Esta vacio el cod");
        }

    }

    public void most_comentario(ObjectContainer Base, String codSoli) {
        if (!codSoli.isEmpty()) {
            solicitud soli = new solicitud();
            soli.setCod_solicitud(codSoli);

            ObjectSet result = Base.get(soli);

            while (result.hasNext()) {
                solicitud next = (solicitud) result.next();
                txt_comentario.setText(next.getComentario_soli());

            }

        } else {

            System.out.println("Esta vacio el cod");
        }

    }

}
