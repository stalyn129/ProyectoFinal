/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;

import Clases.peticion_psico;
import Clases.Niño;
import Clases.Persona;
import Clases.Psicologo;
import Clases.Representante;
import Clases.UserDataSingleton;
import Clases.peticion_psico;
import Clases.solicitud;
import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author alexa
 */
public class Vincular_niño_represe extends javax.swing.JFrame {

    ObjectContainer Base;
    UserDataSingleton usarData;

    public Vincular_niño_represe() {
        initComponents();
        
        Base = Db4o.openFile("src/BBDD/BaseDat.yap");
        usarData = UserDataSingleton.getInstance();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BtnRegresar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        tabbedpanel__ = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txt_busc = new javax.swing.JTextField();
        btn_buscar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txt_apodo = new javax.swing.JTextField();
        txt_nombre = new javax.swing.JTextField();
        txt_apellido = new javax.swing.JTextField();
        btn_solicitar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_areaComentario = new javax.swing.JTextArea();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_nacimiento = new javax.swing.JTextField();
        txt_gen = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        MenuCuentosNiño = new javax.swing.JMenuBar();
        JMenu3puntitosNiño = new javax.swing.JMenu();
        JMnItmCerrarNiño = new javax.swing.JMenuItem();
        JMnPgPrinNiño = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(800, 500));

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnRegresar.setBackground(new java.awt.Color(255, 255, 255));
        BtnRegresar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/atras.png"))); // NOI18N
        BtnRegresar.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        BtnRegresar.setOpaque(false);
        BtnRegresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnRegresarActionPerformed(evt);
            }
        });
        jPanel1.add(BtnRegresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 440, 50, 40));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 670, 30));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Ingresar el apodo:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, 40));
        jPanel2.add(txt_busc, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 30, 209, -1));

        btn_buscar.setText("Buscar");
        btn_buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarActionPerformed(evt);
            }
        });
        jPanel2.add(btn_buscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 30, -1, -1));

        jLabel3.setText("Apellido:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, 20));

        jLabel4.setText("Nombre:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Apodo:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, 20));

        txt_apodo.setEditable(false);
        jPanel2.add(txt_apodo, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 80, 170, -1));

        txt_nombre.setEditable(false);
        txt_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_nombreActionPerformed(evt);
            }
        });
        jPanel2.add(txt_nombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 120, 170, -1));

        txt_apellido.setEditable(false);
        jPanel2.add(txt_apellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 160, 170, -1));

        btn_solicitar.setText("Solicitar Interaccion");
        btn_solicitar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btn_solicitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_solicitarActionPerformed(evt);
            }
        });
        jPanel2.add(btn_solicitar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 340, 270, 20));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Ingrese un comentario al niño:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 200, -1, 20));

        txt_areaComentario.setColumns(20);
        txt_areaComentario.setRows(5);
        jScrollPane1.setViewportView(txt_areaComentario);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 240, 510, 80));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 550, 30));

        jLabel7.setText("Genero:");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 80, -1, -1));

        jLabel17.setText("Fecha Nacimineto:");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 120, -1, -1));

        txt_nacimiento.setEditable(false);
        jPanel2.add(txt_nacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 120, 160, -1));

        txt_gen.setEditable(false);
        jPanel2.add(txt_gen, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, 160, -1));

        tabbedpanel__.addTab("solicitud", jPanel2);

        jPanel1.add(tabbedpanel__, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 30, 670, 410));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoClaro.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 480));

        JMenu3puntitosNiño.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TresPuntitos.png"))); // NOI18N
        JMenu3puntitosNiño.setToolTipText("Configuración");

        JMnItmCerrarNiño.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        JMnItmCerrarNiño.setBackground(new java.awt.Color(255, 255, 255));
        JMnItmCerrarNiño.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CerrarSesion.png"))); // NOI18N
        JMnItmCerrarNiño.setText("Cerrar Sesión");
        JMnItmCerrarNiño.setToolTipText("Cierra la sesión iniciada");
        JMnItmCerrarNiño.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JMnItmCerrarNiñoMousePressed(evt);
            }
        });
        JMenu3puntitosNiño.add(JMnItmCerrarNiño);

        MenuCuentosNiño.add(JMenu3puntitosNiño);

        JMnPgPrinNiño.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Casita.png"))); // NOI18N
        JMnPgPrinNiño.setToolTipText("Resgresa a la página principal");
        JMnPgPrinNiño.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JMnPgPrinNiñoMouseClicked(evt);
            }
        });
        MenuCuentosNiño.add(JMnPgPrinNiño);

        setJMenuBar(MenuCuentosNiño);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void JMnItmCerrarNiñoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnItmCerrarNiñoMousePressed
        Base.close();
        InicioRepresentante loginrepre = new InicioRepresentante();
        loginrepre.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_JMnItmCerrarNiñoMousePressed

    private void JMnPgPrinNiñoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnPgPrinNiñoMouseClicked
        Base.close();
        PagPrincipalRepresentante principalrepresetante = new PagPrincipalRepresentante();
        principalrepresetante.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_JMnPgPrinNiñoMouseClicked

    private void BtnRegresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnRegresarActionPerformed

        Base.close();
        PagPrincipalRepresentante mipagpriad = new PagPrincipalRepresentante();
        mipagpriad.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_BtnRegresarActionPerformed

    private void btn_solicitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_solicitarActionPerformed
        if (!txt_areaComentario.getText().isEmpty()) {
            if (comprobar_soli(Base) == 0) {
                solicitud_crear(Base);
            } else {
                JOptionPane.showMessageDialog(this, "Ya se encuentra pendiende una solicitud al niño");
            }

            txt_busc.setText("");
            txt_apodo.setText("");
            txt_nombre.setText("");
            txt_apellido.setText("");
            txt_areaComentario.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Ingrese un comentario para el niño");
        }

    }//GEN-LAST:event_btn_solicitarActionPerformed

    private void txt_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_nombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_nombreActionPerformed

    private void btn_buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarActionPerformed
        if (!txt_busc.getText().isEmpty()) {

            Buscar_niño(Base, txt_busc.getText());
        }
    }//GEN-LAST:event_btn_buscarActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vincular_niño_represe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vincular_niño_represe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vincular_niño_represe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vincular_niño_represe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vincular_niño_represe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnRegresar;
    private javax.swing.JMenu JMenu3puntitosNiño;
    private javax.swing.JMenuItem JMnItmCerrarNiño;
    private javax.swing.JMenu JMnPgPrinNiño;
    private javax.swing.JMenuBar MenuCuentosNiño;
    private javax.swing.JButton btn_buscar;
    private javax.swing.JButton btn_solicitar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane tabbedpanel__;
    private javax.swing.JTextField txt_apellido;
    private javax.swing.JTextField txt_apodo;
    private javax.swing.JTextArea txt_areaComentario;
    private javax.swing.JTextField txt_busc;
    private javax.swing.JTextField txt_gen;
    private javax.swing.JTextField txt_nacimiento;
    private javax.swing.JTextField txt_nombre;
    // End of variables declaration//GEN-END:variables
////////////////////////////////////////////////////// ENVIAR SOLIICITUD ////////////////////////////////////////////////
    public void solicitud_crear(ObjectContainer Base) {
        if (!cod_niño.isEmpty()) {
            solicitud soli = new solicitud();

            String cod = calcular_solicitud(Base);
            System.out.println("codigo soli: " + cod);

            soli.setCod_solicitud(cod);
            soli.setFKcod_representante(usarData.getCod_Representante());
            System.out.println("es: " + cod_niño);
            soli.setFKcod_niño(cod_niño);
            soli.setEstado_solicitud1("Pendiente");
            soli.setFecha_soli(new Date());
            soli.setComentario_soli(txt_areaComentario.getText());
            Base.store(soli);

            JOptionPane.showMessageDialog(this, "Se envio la solicitud");

        } else {
            JOptionPane.showMessageDialog(this, "Buscar primero al niño para enviar un solisitud");
        }

    }

    public String calcular_solicitud(ObjectContainer Base) {
        boolean rep = true;
        int incremental = 0;
        String cod = "";
        while (rep) {
            incremental++;
            cod = String.format("SL%03d", incremental);
            if (verificra_cos_solli(Base, cod) == 0) {
                rep = false;
            }

        }
        return cod;

    }

    public int verificra_cos_solli(ObjectContainer Base, String codsoli) {
        solicitud sol = new solicitud();
        sol.setCod_solicitud(codsoli);
        ObjectSet result = Base.get(sol);

        return result.size();
    }

    String cod_niño = "";

    public void Buscar_niño(ObjectContainer Base, String Apodo) {

        Niño nini = new Niño();
        nini.setApodo(Apodo);
        ObjectSet Result = Base.get(nini);

        if (Result.size() != 0) {
            while (Result.hasNext()) {
                Niño next = (Niño) Result.next();
                cod_niño = next.getCod_Niño();

                txt_apodo.setText(next.getApodo());
                txt_nombre.setText(next.getNombre());
                txt_apellido.setText(next.getApellido());
                txt_gen.setText(String.valueOf(next.getSexo_Niño()));
                txt_nacimiento.setText( formatoFecha(next.getFecha_Nacimiento()) );
            }

        } else {
            JOptionPane.showMessageDialog(this, "El apodo ingresador no exist\nRECUERDA QUE DEBE ESTA ESCRITO IGUAL A LO REGISTRADOS");

        }

    }
    private String formatoFecha(Date fecha) {
        if (fecha == null) {
            return "Fecha no disponible";
        }

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        return sdf.format(fecha);
    }

    public int comprobar_soli(ObjectContainer Base) {
        solicitud solis = new solicitud();
        solis.setFKcod_niño(cod_niño);
        solis.setFKcod_representante(usarData.getCod_Representante());
        solis.setEstado_solicitud1("Pendiente");

        ObjectSet result = Base.get(solis);

        return result.size();
    }
    /////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

    //////////////////////////////////////////////////// MOSTRAR TABLA DE SOLICITUDES ACEPTADAS ///////////////////////////////
    String codSolicitud_aceptada = "";
    String cod_niño__ = "";

//    public void Mostrar_tabla_aceptados(ObjectContainer Base) {
//
//        solicitud soli = new solicitud();
//        soli.setFKcod_representante(usarData.getCod_Representante());
//        soli.setEstado_solicitud1("Aceptada");
//
//        DefaultTableModel modelo = (DefaultTableModel) tabla_acep.getModel();
//        modelo.setRowCount(0);
//
//        ObjectSet result = Base.get(soli);
//        if (result.size() != 0) {
//
//            while (result.hasNext()) {
//                solicitud next = (solicitud) result.next();
//
//                modelo.addRow(new Object[]{
//                    next.getCod_solicitud(),
//                    Mostrar_nombre_nin(Base, next.getFKcod_niño()),
//                    Mostrar_nombre_Represent(Base, next.getFKcod_representante())
//
//                });
//
//            }
//
//        } else {
//        }
//
//    }

//    public void cargar_datos_niño(ObjectContainer Base, String cod) {
//     
//                solicitud soli = new solicitud();
//                soli.setCod_solicitud(cod);
//
//                ObjectSet rest = Base.get(soli);
//                while (rest.hasNext()) {
//                    solicitud next1 = (solicitud) rest.next();
//
//                    String cod_ni = next1.getFKcod_niño();
//                    Niño nin = new Niño();
//                    nin.setCod_Niño(cod_ni);
//
//                    ObjectSet res = Base.get(nin);
//
//                    if (res.size() != 0) {
//
//                        while (res.hasNext()) {
//                            Niño n = (Niño) res.next();
//
//                            pt_apodo.setText(n.getApodo());
//                            pt_nombre.setText(n.getNombre());
//                            pt_apellido.setText(n.getApellido());
//
//                        }
//
//                    } else {
//                        System.out.println("No se encuentra al niño");
//                    }
//
//                }
//
//            
//
//    }

    String cod_psic = "";

//    public void cod_vincu_mostr(ObjectContainer Base, String codVincu) {
//        Psicologo psic = new Psicologo();
//        psic.setCodigo_vinculacion(codVincu);
//
//        ObjectSet result = Base.get(psic);
//        if (result.size() != 0) {
//            while (result.hasNext()) {
//                Psicologo next = (Psicologo) result.next();
//                cod_psic = next.getCod_Psicologo();
//                String codPsic = next.getFK_Cedula();
//                cod_nombre(Base, codPsic);
//
//            }
//
//        } else {
//            JOptionPane.showMessageDialog(this, "No se encontro al Psicologo");
//        }
//
//    }

//    public void cod_nombre(ObjectContainer Base, String cedula) {
//        Persona person = new Persona();
//        person.setCedula(cedula);
//
//        ObjectSet result = Base.get(person);
//
//        while (result.hasNext()) {
//            Persona next = (Persona) result.next();
//
//            txt_gen.setText(next.getNombre() + " " + next.getApellido());
//            jTextField3.setText(next.getCod_Especialidad());
//
//        }
//
//    }
//
//    public void Creap_peticion(ObjectContainer Base) {
//        if (!codSolicitud_aceptada.isEmpty()) {
//            peticion_psico pet = new peticion_psico();
//
//            String cod = calcular_peticion(Base);
//            System.out.println("codigo soli: " + cod);
//
//            pet.setCod_Peticion(cod);
//            pet.setFkCod_Psicologo(cod_psic);
//            pet.setFKcod_solicitud(codSolicitud_aceptada);
//            pet.setDescripcion(txt_envias.getText());
//            pet.setEstado_peticion("Pendiente");
//            pet.setFecha_pet(new Date());
//
//            Base.store(pet);
//
//            JOptionPane.showMessageDialog(this, "Se encio la Peticion");
//
//            pt_apodo.setText("");
//            pt_nombre.setText("");
//            pt_apellido.setText("");
//
//            cod_psic = "";
//            codSolicitud_aceptada = "";
//            txt_cod_vincu.setText("");
//            txt_gen.setText("");
//            jTextField3.setText("");
//            txt_envias.setText("");
//
//        } else {
//
//            JOptionPane.showMessageDialog(this, "Seleccionar Una fila de la tabla");
//        }
//
//    }

    public String calcular_peticion(ObjectContainer Base) {
        boolean rep = true;
        int incremental = 0;
        String cod = "";
        while (rep) {
            incremental++;
            cod = String.format("Pt%03d", incremental);
            if (verificra_cos_peticion(Base, cod) == 0) {
                rep = false;
            }

        }
        return cod;

    }

    public int verificra_cos_peticion(ObjectContainer Base, String codsoli) {
        peticion_psico sol = new peticion_psico();
        sol.setCod_Peticion(codsoli);
        ObjectSet result = Base.get(sol);

        return result.size();
    }

   

    public String Mostrar_nombre_Represent(ObjectContainer Base, String cod) {
        String nombres = "";
        Representante nin = new Representante();
        nin.setCod_Repre(cod);

        ObjectSet result = Base.get(nin);
        if (result.size() != 0) {
            while (result.hasNext()) {
                Representante next = (Representante) result.next();

                Persona person = new Persona();
                person.setCedula(next.getFKCod_Cedula());
                ObjectSet resu = Base.get(person);
                while (resu.hasNext()) {
                    Persona next1 = (Persona) resu.next();

                    nombres = next1.getNombre() + " " + next1.getApellido();

                }
            }

        } else {
            System.out.println("No se encontro al Psicologo");
        }
        return nombres;
    }

    public String Mostrar_nombre_nin(ObjectContainer Base, String cod) {
        String nombres = "";
        Niño nin = new Niño();
        nin.setCod_Niño(cod);

        ObjectSet result = Base.get(nin);
        if (result.size() != 0) {
            while (result.hasNext()) {
                Niño next = (Niño) result.next();

                nombres = next.getNombre() + " " + next.getApellido();

            }

        } else {
            System.out.println("No se encontro al niño");
        }
        return nombres;
    }
    //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}
