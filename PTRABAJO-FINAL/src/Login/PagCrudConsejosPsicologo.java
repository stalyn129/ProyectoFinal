/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;

import Clases.Consejos;
import Login.InicioPsicologo;
import Login.PagCrudForoPsicologo;
import Login.PagPrincipalPsicologo;
import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import com.db4o.ext.DatabaseClosedException;
import com.db4o.ext.DatabaseReadOnlyException;
import com.db4o.ext.Db4oIOException;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mauca
 */
public class PagCrudConsejosPsicologo extends javax.swing.JFrame {

    ObjectContainer Base;
    JFileChooser seleccionar = new JFileChooser();
    byte[] imagenconsejo1;
    byte[] imagenconsejo2;
    String rutaImagenConsejo1;
    String rutaImagenConsejo2;
    
    
    public PagCrudConsejosPsicologo() {
        initComponents();
            Base = Db4o.openFile("src/BBDD/BaseDat.yap");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Txt_TituloConsejPsicologo2 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        imagen_2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAConsejoPsico2 = new javax.swing.JTextArea();
        btn_Ingresar_imagen = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAConsejoPsico1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        Txt_TituloConsejPsicologo1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jSeparator6 = new javax.swing.JSeparator();
        imagen_1 = new javax.swing.JLabel();
        jSeparator7 = new javax.swing.JSeparator();
        btn_Ingresar_imagen1 = new javax.swing.JButton();
        jSeparator8 = new javax.swing.JSeparator();
        jSeparator12 = new javax.swing.JSeparator();
        jScrollPane5 = new javax.swing.JScrollPane();
        JTConsejos = new javax.swing.JTable();
        BtnEliminarPsicologo = new javax.swing.JButton();
        btn_ingresar1 = new javax.swing.JButton();
        BtnActualizarPsicologo = new javax.swing.JButton();
        BtnConsultarPsicologo = new javax.swing.JButton();
        BtnModifiPsicologo = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        BtnCerrarPagina = new javax.swing.JButton();
        Fondo = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        JMenu3puntitosPsicologo = new javax.swing.JMenu();
        JMnItmCerrarPsicologo = new javax.swing.JMenuItem();
        JMnPgPrinPsicolo = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setToolTipText("");
        jScrollPane1.setDoubleBuffered(true);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setMinimumSize(new java.awt.Dimension(743, 1088));
        jPanel4.setPreferredSize(new java.awt.Dimension(743, 1088));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel1.setText("Ingrese la imagen para el consejo 2:");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 380, -1, 20));

        jLabel2.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel2.setText("Creación de los Consejos Para El Niño");
        jPanel4.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 10, -1, -1));

        Txt_TituloConsejPsicologo2.setForeground(new java.awt.Color(102, 102, 102));
        Txt_TituloConsejPsicologo2.setText("Ingrese el Titulo");
        Txt_TituloConsejPsicologo2.setToolTipText("Escribe el titulo del consejo");
        Txt_TituloConsejPsicologo2.setBorder(null);
        Txt_TituloConsejPsicologo2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Txt_TituloConsejPsicologo2MousePressed(evt);
            }
        });
        jPanel4.add(Txt_TituloConsejPsicologo2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 410, 310, 20));
        jPanel4.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 310, 10));

        imagen_2.setForeground(new java.awt.Color(204, 204, 204));
        imagen_2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagen_2.setText(" Ingresar Imagen");
        imagen_2.setToolTipText("Selecciona la imagen ");
        imagen_2.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel4.add(imagen_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 420, 260, 190));

        jLabel3.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel3.setText("Titulo del Consejo Número 2:");
        jPanel4.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 380, -1, -1));

        txtAConsejoPsico2.setColumns(20);
        txtAConsejoPsico2.setLineWrap(true);
        txtAConsejoPsico2.setRows(5);
        txtAConsejoPsico2.setToolTipText("Escribe el contenido de los consejos");
        txtAConsejoPsico2.setWrapStyleWord(true);
        txtAConsejoPsico2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane2.setViewportView(txtAConsejoPsico2);

        jPanel4.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 480, 310, 170));

        btn_Ingresar_imagen.setText("Ingresar Imagen");
        btn_Ingresar_imagen.setToolTipText("Selecciona la imagen correspondiente");
        btn_Ingresar_imagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Ingresar_imagenActionPerformed(evt);
            }
        });
        jPanel4.add(btn_Ingresar_imagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 630, 160, -1));
        jPanel4.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 410, 260, 10));

        jLabel4.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel4.setText("Ingrese el texto del consejo Número 2:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 450, -1, -1));
        jPanel4.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 620, 260, 10));
        jPanel4.add(jSeparator4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, 700, 20));

        txtAConsejoPsico1.setColumns(20);
        txtAConsejoPsico1.setLineWrap(true);
        txtAConsejoPsico1.setRows(5);
        txtAConsejoPsico1.setToolTipText("Escribe el contenido de los consejos");
        txtAConsejoPsico1.setWrapStyleWord(true);
        txtAConsejoPsico1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane3.setViewportView(txtAConsejoPsico1);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 310, 170));

        jLabel5.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel5.setText("Ingrese el texto del consejo Número 1:");
        jPanel4.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 140, -1, -1));
        jPanel4.add(jSeparator5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 310, 10));

        Txt_TituloConsejPsicologo1.setForeground(new java.awt.Color(102, 102, 102));
        Txt_TituloConsejPsicologo1.setText("Ingrese el Titulo");
        Txt_TituloConsejPsicologo1.setToolTipText("Escribe el titulo del consejo");
        Txt_TituloConsejPsicologo1.setBorder(null);
        Txt_TituloConsejPsicologo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                Txt_TituloConsejPsicologo1MousePressed(evt);
            }
        });
        Txt_TituloConsejPsicologo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Txt_TituloConsejPsicologo1ActionPerformed(evt);
            }
        });
        jPanel4.add(Txt_TituloConsejPsicologo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 100, 310, 20));

        jLabel6.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel6.setText("Titulo del Consejo Número 1:");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, -1));

        jLabel7.setFont(new java.awt.Font("Roboto", 1, 14)); // NOI18N
        jLabel7.setText("Ingrese la imagen para el consejo 1:");
        jPanel4.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 70, -1, 20));
        jPanel4.add(jSeparator6, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 100, 260, 10));

        imagen_1.setForeground(new java.awt.Color(204, 204, 204));
        imagen_1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        imagen_1.setText(" Ingresar Imagen");
        imagen_1.setToolTipText("Selecciona la imagen ");
        imagen_1.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel4.add(imagen_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 110, 260, 190));
        jPanel4.add(jSeparator7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 310, 260, 10));

        btn_Ingresar_imagen1.setText("Ingresar Imagen");
        btn_Ingresar_imagen1.setToolTipText("Selecciona la imagen correspondiente");
        btn_Ingresar_imagen1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_Ingresar_imagen1ActionPerformed(evt);
            }
        });
        jPanel4.add(btn_Ingresar_imagen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 320, 160, -1));
        jPanel4.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 730, 700, 20));
        jPanel4.add(jSeparator12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 1050, 700, 20));

        JTConsejos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Código", "Titulo1", "Titulo 2", "Texto 1", "Texto 2", "Imagen 1", "Imagen 2"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JTConsejos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTConsejosMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(JTConsejos);

        jPanel4.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 760, 700, 240));

        BtnEliminarPsicologo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BtnEliminarPsicologo.setText("Eliminar");
        BtnEliminarPsicologo.setToolTipText("Elimina los datos existentes en la tabla");
        BtnEliminarPsicologo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnEliminarPsicologoMouseClicked(evt);
            }
        });
        BtnEliminarPsicologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnEliminarPsicologoActionPerformed(evt);
            }
        });
        jPanel4.add(BtnEliminarPsicologo, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 1010, 100, -1));

        btn_ingresar1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btn_ingresar1.setText("Ingresar");
        btn_ingresar1.setToolTipText("Ingresa datos nuevos a la tabla");
        btn_ingresar1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_ingresar1MouseClicked(evt);
            }
        });
        btn_ingresar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_ingresar1ActionPerformed(evt);
            }
        });
        jPanel4.add(btn_ingresar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 680, 100, -1));

        BtnActualizarPsicologo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BtnActualizarPsicologo.setText("Actualizar");
        BtnActualizarPsicologo.setToolTipText("Actualiza los datos existentes en la tabla");
        BtnActualizarPsicologo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnActualizarPsicologoMouseClicked(evt);
            }
        });
        BtnActualizarPsicologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnActualizarPsicologoActionPerformed(evt);
            }
        });
        jPanel4.add(BtnActualizarPsicologo, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 1010, 100, -1));

        BtnConsultarPsicologo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BtnConsultarPsicologo.setText("Consultar");
        BtnConsultarPsicologo.setToolTipText("Consulta los datos existentes en la tabla");
        BtnConsultarPsicologo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnConsultarPsicologoMouseClicked(evt);
            }
        });
        BtnConsultarPsicologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnConsultarPsicologoActionPerformed(evt);
            }
        });
        jPanel4.add(BtnConsultarPsicologo, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 1010, 100, -1));

        BtnModifiPsicologo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BtnModifiPsicologo.setText("Modificar");
        BtnModifiPsicologo.setToolTipText("Modifica los datos existentes en la tabla");
        BtnModifiPsicologo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnModifiPsicologoMouseClicked(evt);
            }
        });
        BtnModifiPsicologo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnModifiPsicologoActionPerformed(evt);
            }
        });
        jPanel4.add(BtnModifiPsicologo, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 1010, 100, -1));

        jLabel8.setFont(new java.awt.Font("Rockwell", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Ni Uno Mas-Logo-1 (1).png"))); // NOI18N
        jPanel4.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 70));

        jScrollPane1.setViewportView(jPanel4);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 760, 410));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 760, 410));

        BtnCerrarPagina.setBackground(new java.awt.Color(255, 255, 255));
        BtnCerrarPagina.setFont(new java.awt.Font("Rockwell Extra Bold", 1, 18)); // NOI18N
        BtnCerrarPagina.setText("x");
        BtnCerrarPagina.setToolTipText("Cerrar Pagina dando click aqui");
        BtnCerrarPagina.setBorder(null);
        BtnCerrarPagina.setOpaque(false);
        BtnCerrarPagina.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BtnCerrarPaginaMouseClicked(evt);
            }
        });
        BtnCerrarPagina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCerrarPaginaActionPerformed(evt);
            }
        });
        jPanel1.add(BtnCerrarPagina, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 20, 40, 30));

        Fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoClaro.jpg"))); // NOI18N
        Fondo.setPreferredSize(new java.awt.Dimension(800, 500));
        jPanel1.add(Fondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 500));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 800, 500));

        JMenu3puntitosPsicologo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TresPuntitos.png"))); // NOI18N
        JMenu3puntitosPsicologo.setToolTipText("Configuración");

        JMnItmCerrarPsicologo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        JMnItmCerrarPsicologo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CerrarSesion.png"))); // NOI18N
        JMnItmCerrarPsicologo.setText("Cerrar Sesión");
        JMnItmCerrarPsicologo.setToolTipText("Cierra la sesión iniciada");
        JMnItmCerrarPsicologo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JMnItmCerrarPsicologoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JMnItmCerrarPsicologoMousePressed(evt);
            }
        });
        JMenu3puntitosPsicologo.add(JMnItmCerrarPsicologo);

        jMenuBar1.add(JMenu3puntitosPsicologo);

        JMnPgPrinPsicolo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Casita.png"))); // NOI18N
        JMnPgPrinPsicolo.setToolTipText("Resgresa a la página principal");
        JMnPgPrinPsicolo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JMnPgPrinPsicoloMouseClicked(evt);
            }
        });
        jMenuBar1.add(JMnPgPrinPsicolo);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnConsultarPsicologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnConsultarPsicologoActionPerformed
        String codigoAConsultar = JOptionPane.showInputDialog(this, "Ingrese el código a consultar");

        if (codigoAConsultar != null && !codigoAConsultar.isEmpty()) {
            ConsultarRegistro(Base, codigoAConsultar);
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código válido para consultar.");
        }
    }//GEN-LAST:event_BtnConsultarPsicologoActionPerformed

    private void BtnConsultarPsicologoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnConsultarPsicologoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnConsultarPsicologoMouseClicked

    private void BtnActualizarPsicologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnActualizarPsicologoActionPerformed
        JTConsejos.setVisible(true);
            MostrarDatos(Base);
    }//GEN-LAST:event_BtnActualizarPsicologoActionPerformed

    private void BtnActualizarPsicologoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnActualizarPsicologoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnActualizarPsicologoMouseClicked

    private void btn_ingresar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_ingresar1ActionPerformed
        Consejos miconsejo = new Consejos();
           //elcue.setCod_Cuento(Txt_Codigo.getText());
            String CodConsejo = Calcular_CodConsejos(Base);
            miconsejo.setCod_consejo(CodConsejo);
            miconsejo.setTitulo1Consejo(Txt_TituloConsejPsicologo1.getText());
            miconsejo.setTexConsejo1(txtAConsejoPsico1.getText());
            miconsejo.setTexConsejo2(txtAConsejoPsico2.getText());
            miconsejo.setTitulo2Consejo(Txt_TituloConsejPsicologo2.getText());
            miconsejo.setImagenConsejo1(imagenconsejo1);
            miconsejo.setImagenConsejo2(imagenconsejo2);

            // Almacena la ruta de la imagen en la propiedad de la entidad Cuento
            miconsejo.setRutaImageConsejo1(rutaImagenConsejo1);
            miconsejo.setRutaImageConsejo2(rutaImagenConsejo2);

            Base.store(miconsejo);
            javax.swing.JOptionPane.showMessageDialog(this, "SE GUARDÓ EN LA BASE");
            MostrarDatos(Base);
    }//GEN-LAST:event_btn_ingresar1ActionPerformed

    private void btn_ingresar1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_ingresar1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_btn_ingresar1MouseClicked

    private void BtnEliminarPsicologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnEliminarPsicologoActionPerformed
        String codigoAEliminar = JOptionPane.showInputDialog(this, "Ingrese el código a eliminar:");

        if (codigoAEliminar != null && !codigoAEliminar.isEmpty()) {
            EliminarRegistro(Base, codigoAEliminar);
        } else {
            JOptionPane.showMessageDialog(this, "Debe ingresar un código válido para eliminar.");
        }
    }//GEN-LAST:event_BtnEliminarPsicologoActionPerformed

    private void BtnEliminarPsicologoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnEliminarPsicologoMouseClicked

    }//GEN-LAST:event_BtnEliminarPsicologoMouseClicked

    private void btn_Ingresar_imagen1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Ingresar_imagen1ActionPerformed
       if (seleccionar.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {
            File archivo = seleccionar.getSelectedFile();
            if (archivo.getName().endsWith("jpg") || archivo.getName().endsWith("jpeg") || archivo.getName().endsWith("png") || archivo.getName().endsWith("gif")) {
                imagenconsejo1 = AbrirArchivo(archivo);

                // Convierte el array de bytes a un objeto Image
                Image imagenOriginal = convertirBytesAImagen(imagenconsejo1);

                // Redimensiona la imagen a 96x15
                Image imagenRedimensionada = imagenOriginal.getScaledInstance(240, 110, Image.SCALE_SMOOTH);

                // Crea un ImageIcon a partir de la imagen redimensionada
                ImageIcon iconoRedimensionado = new ImageIcon(imagenRedimensionada);

                imagen_1.setIcon(iconoRedimensionado);

                // Almacena la ruta del archivo seleccionado en la variable rutaImagenInicial
                rutaImagenConsejo1 = archivo.getAbsolutePath();
            } else {
                JOptionPane.showMessageDialog(null, "Archivo no compatible");
            }
        }
    }//GEN-LAST:event_btn_Ingresar_imagen1ActionPerformed

    private void btn_Ingresar_imagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_Ingresar_imagenActionPerformed
        if (seleccionar.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {
            File archivo = seleccionar.getSelectedFile();
            if (archivo.getName().endsWith("jpg") || archivo.getName().endsWith("jpeg") || archivo.getName().endsWith("png") || archivo.getName().endsWith("gif")) {
                imagenconsejo2 = AbrirArchivo(archivo);

                // Convierte el array de bytes a un objeto Image
                Image imagenOriginal = convertirBytesAImagen(imagenconsejo2);

                // Redimensiona la imagen a 96x15
                Image imagenRedimensionada = imagenOriginal.getScaledInstance(240, 110, Image.SCALE_SMOOTH);

                // Crea un ImageIcon a partir de la imagen redimensionada
                ImageIcon iconoRedimensionado = new ImageIcon(imagenRedimensionada);

                imagen_2.setIcon(iconoRedimensionado);

                // Almacena la ruta del archivo seleccionado en la variable rutaImagenInicial
                rutaImagenConsejo2 = archivo.getAbsolutePath();
            } else {
                JOptionPane.showMessageDialog(null, "Archivo no compatible");
            }
        }
    }//GEN-LAST:event_btn_Ingresar_imagenActionPerformed

    private void BtnModifiPsicologoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnModifiPsicologoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnModifiPsicologoMouseClicked

    private void BtnModifiPsicologoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnModifiPsicologoActionPerformed
        try {
            DefaultTableModel modelo = (DefaultTableModel) JTConsejos.getModel();
            int filaSeleccionada = JTConsejos.getSelectedRow();

            if (filaSeleccionada == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione una fila para modificar.");
                return;
            }

            String codigoConsejo = (String) modelo.getValueAt(filaSeleccionada, 0);
            String nuevoTitulo1 = JOptionPane.showInputDialog(this, "Ingrese el nuevo título 1:", modelo.getValueAt(filaSeleccionada, 1));
            String nuevoTitulo2 = JOptionPane.showInputDialog(this, "Ingrese el nuevo título 2:", modelo.getValueAt(filaSeleccionada, 2));
            String nuevoTexto1 = JOptionPane.showInputDialog(this, "Ingrese el nuevo texto 1:", modelo.getValueAt(filaSeleccionada, 3));
            String nuevoTexto2 = JOptionPane.showInputDialog(this, "Ingrese el nuevo texto 2:", modelo.getValueAt(filaSeleccionada, 4));

            JFileChooser fileChooser1 = new JFileChooser();
            FileNameExtensionFilter filter1 = new FileNameExtensionFilter("Imágenes", "jpg", "jpeg", "png", "gif");
            fileChooser1.setFileFilter(filter1);

            int result1 = fileChooser1.showOpenDialog(this);

            byte[] nuevaImagen1 = null;
            String nuevaRutaImagen1 = "";

            if (result1 == JFileChooser.APPROVE_OPTION) {
                File selectedFile1 = fileChooser1.getSelectedFile();
                nuevaRutaImagen1 = selectedFile1.getAbsolutePath();
                nuevaImagen1 = AbrirArchivo(selectedFile1);
            }

            JFileChooser fileChooser2 = new JFileChooser();
            FileNameExtensionFilter filter2 = new FileNameExtensionFilter("Imágenes", "jpg", "jpeg", "png", "gif");
            fileChooser2.setFileFilter(filter2);

            int result2 = fileChooser2.showOpenDialog(this);

            byte[] nuevaImagen2 = null;
            String nuevaRutaImagen2 = "";

            if (result2 == JFileChooser.APPROVE_OPTION) {
                File selectedFile2 = fileChooser2.getSelectedFile();
                nuevaRutaImagen2 = selectedFile2.getAbsolutePath();
                nuevaImagen2 = AbrirArchivo(selectedFile2);
            }

            ModificarConsejo(Base, codigoConsejo, nuevoTitulo1, nuevoTitulo2, nuevoTexto1, nuevoTexto2, nuevaImagen1, nuevaImagen2);
            MostrarDatos(Base);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al modificar: " + e.getMessage());
        }
    }//GEN-LAST:event_BtnModifiPsicologoActionPerformed

    private void Txt_TituloConsejPsicologo1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Txt_TituloConsejPsicologo1MousePressed
        if (Txt_TituloConsejPsicologo1.getText().equals("Ingrese el Titulo")) {
            Txt_TituloConsejPsicologo1.setText("");
            Txt_TituloConsejPsicologo1.setForeground(Color.black);
        }
        if (Txt_TituloConsejPsicologo2.getText().isEmpty()) {
            Txt_TituloConsejPsicologo2.setText("Ingrese el Titulo");
            Txt_TituloConsejPsicologo2.setForeground(Color.gray);
        }
    }//GEN-LAST:event_Txt_TituloConsejPsicologo1MousePressed

    private void Txt_TituloConsejPsicologo2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Txt_TituloConsejPsicologo2MousePressed
        if (Txt_TituloConsejPsicologo2.getText().equals("Ingrese el Titulo")) {
            Txt_TituloConsejPsicologo2.setText("");
            Txt_TituloConsejPsicologo2.setForeground(Color.black);
        }
        if (Txt_TituloConsejPsicologo1.getText().isEmpty()) {
            Txt_TituloConsejPsicologo1.setText("Ingrese el Titulo");
            Txt_TituloConsejPsicologo1.setForeground(Color.gray);
        }
    }//GEN-LAST:event_Txt_TituloConsejPsicologo2MousePressed

    private void Txt_TituloConsejPsicologo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Txt_TituloConsejPsicologo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Txt_TituloConsejPsicologo1ActionPerformed

    private void JTConsejosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTConsejosMouseClicked
        int filaSeleccionada = JTConsejos.getSelectedRow();

        if (filaSeleccionada != -1) {
            String descripcionImagen1 = (String) JTConsejos.getValueAt(filaSeleccionada, 1);
            String descripcionImagen2 = (String) JTConsejos.getValueAt(filaSeleccionada, 2);

            String rutaImagen1 = extraerRutaDesdeDescripcionConsejo(descripcionImagen1);
            String rutaImagen2 = extraerRutaDesdeDescripcionConsejo(descripcionImagen2);

            if (rutaImagen1 != null && rutaImagen2 != null) {
                try {
                    byte[] imagenBytes1 = obtenerBytesDesdeRutaConsejo(rutaImagen1);
                    byte[] imagenBytes2 = obtenerBytesDesdeRutaConsejo(rutaImagen2);

                    Image imagenOriginal1 = convertirBytesAImagen(imagenBytes1);
                    Image imagenOriginal2 = convertirBytesAImagen(imagenBytes2);

                    if (imagenOriginal1 != null && imagenOriginal2 != null) {
                        Image imagenRedimensionada1 = imagenOriginal1.getScaledInstance(550, 330, Image.SCALE_SMOOTH);
                        Image imagenRedimensionada2 = imagenOriginal2.getScaledInstance(550, 330, Image.SCALE_SMOOTH);

                        ImageIcon iconoRedimensionado1 = new ImageIcon(imagenRedimensionada1);
                        ImageIcon iconoRedimensionado2 = new ImageIcon(imagenRedimensionada2);

                        imagen_1.setIcon(iconoRedimensionado1);
                        imagen_2.setIcon(iconoRedimensionado2);
                    } else {
                        JOptionPane.showMessageDialog(this, "Error: No se pudo convertir alguna de las imágenes a formato válido.");
                    }
                } catch (IOException e) {
                    JOptionPane.showMessageDialog(this, "Error al cargar las imágenes: " + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_JTConsejosMouseClicked

    private void JMnItmCerrarPsicologoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnItmCerrarPsicologoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_JMnItmCerrarPsicologoMouseClicked

    private void JMnItmCerrarPsicologoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnItmCerrarPsicologoMousePressed
        Base.close();
        InicioPsicologo loginPsicologo = new InicioPsicologo();
        loginPsicologo.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_JMnItmCerrarPsicologoMousePressed

    private void JMnPgPrinPsicoloMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnPgPrinPsicoloMouseClicked
        Base.close();
        PagPrincipalPsicologo principal = new PagPrincipalPsicologo();
        principal.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_JMnPgPrinPsicoloMouseClicked

    private void BtnCerrarPaginaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BtnCerrarPaginaMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_BtnCerrarPaginaMouseClicked

    private void BtnCerrarPaginaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCerrarPaginaActionPerformed
        System.exit(0);
    }//GEN-LAST:event_BtnCerrarPaginaActionPerformed

    public byte[] AbrirArchivo(File archivo) {
        try ( FileInputStream entrada = new FileInputStream(archivo)) {
            ByteArrayOutputStream baos = new ByteArrayOutputStream();
            byte[] buffer = new byte[1024];
            int bytesRead;
            while ((bytesRead = entrada.read(buffer)) != -1) {
                baos.write(buffer, 0, bytesRead);
            }
            return baos.toByteArray();
        } catch (IOException e) {
            e.printStackTrace();
            return null; 
        }
    }
    
    private Image convertirBytesAImagen(byte[] bytes) {
        ByteArrayInputStream bis = new ByteArrayInputStream(bytes);
        try {
            return ImageIO.read(bis);
        } catch (IOException e) {
            e.printStackTrace();
            return null;
        }
    }
    
    
    public void MostrarDatos(ObjectContainer Base) {

        Consejos datosconsejos = new Consejos();
        ObjectSet result = Base.get(datosconsejos);

        DefaultTableModel modelo = (DefaultTableModel) JTConsejos.getModel();

        // Limpiar el modelo antes de agregar nuevas filas
        modelo.setRowCount(0);

        while (result.hasNext()) {
            Consejos misConsejos = (Consejos) result.next();
            modelo.addRow(new Object[]{
                misConsejos.getCod_consejo(),
                misConsejos.getTitulo1Consejo(),
                misConsejos.getTitulo2Consejo(),
                misConsejos.getTexConsejo1(),
                misConsejos.getTexConsejo2(),
                misConsejos.getRutaImageConsejo1(),
                misConsejos.getRutaImageConsejo2()

            });
        }
    }
    
    public static int VerificarConsejo(ObjectContainer Base, String Codigo) {
        Consejos Conse = new Consejos();
        Conse.setCod_consejo(Codigo);
        ObjectSet result = Base.get(Conse);
        return result.size();
    }
    
    private void ConsultarRegistro(ObjectContainer base, String CodConsejo) {

        // Creando un objeto de ejemplo para la consulta
        Consejos consejotp = new Consejos(CodConsejo, null, null, null, null, null, null, null, null);

        // Consultando la base de datos
        ObjectSet result = base.queryByExample(consejotp);

        if (result.hasNext()) {
            // Manejando el resultado (puedes querer mostrarlo o procesarlo)
            Consejos registroConsultado = (Consejos) result.next();
            System.out.println("Registro consultado: " + registroConsultado);
            JOptionPane.showMessageDialog(this, "El registro se ha consultado con éxito");

            // Llamar al método ConsultarDatos para mostrar el registro en la tabla
            ConsultarDatos(Base, registroConsultado);
        } else {
            JOptionPane.showMessageDialog(this, "No se encontró el registro en la base de datos");
        }
    }
    
     public void ConsultarDatos(ObjectContainer base, Consejos consulta) {
        DefaultTableModel modelo = (DefaultTableModel) JTConsejos.getModel();

        // Limpiar el modelo antes de agregar nuevas filas
        modelo.setRowCount(0);

        if (consulta != null) {
            // Agregar el registro consultado a la tabla
            modelo.addRow(new Object[]{
                consulta.getCod_consejo(),
                consulta.getTitulo1Consejo(),
                consulta.getTitulo2Consejo(),
                consulta.getTexConsejo1(),
                consulta.getTexConsejo2(),
                consulta.getRutaImageConsejo1(),
                consulta.getRutaImageConsejo2()
                
            });
        }
    }
    
    public void ModificarConsejo(ObjectContainer Base, String CodigoCons, String NuevoTitulo1, String NuevoTitulo2, String NuevoTexto1, String NuevoTexto2, byte[] NuevaImagen1, byte[] NuevaImagen2) {
        try {
            Consejos modiconsejo = new Consejos();
            modiconsejo.setCod_consejo(CodigoCons);

            ObjectSet result = Base.queryByExample(modiconsejo);

            if (result.hasNext()) {
                Consejos NueConse = (Consejos) result.next();

                // Modificar los campos
                NueConse.setTitulo1Consejo(NuevoTitulo1);
                NueConse.setTitulo2Consejo(NuevoTitulo2);
                NueConse.setTexConsejo1(NuevoTexto1);
                NueConse.setTexConsejo2(NuevoTexto2);
                NueConse.setImagenConsejo1(NuevaImagen1);
                NueConse.setImagenConsejo2(NuevaImagen2);

                // Almacenar los cambios en la base de datos
                Base.store(NueConse);

                JOptionPane.showMessageDialog(this, "Se modificó el consejo correctamente.");
                MostrarDatos(Base);
            } else {
                JOptionPane.showMessageDialog(this, "Error: No se encontró el consejo para modificar.");
            }
        } catch (DatabaseClosedException | DatabaseReadOnlyException | Db4oIOException | HeadlessException e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
        }
    }
    private void EliminarRegistro(ObjectContainer base, String Cod_Consejo) {

            Consejos conseElimi = new Consejos(Cod_Consejo, null, null, null, null, null, null, null, null);

            // Mensaje de depuración
            System.out.println("Buscando el registro en la base de datos...");

            ObjectSet result = base.queryByExample(conseElimi);

            if (result.hasNext()) {

                base.delete(result.next());
                JOptionPane.showMessageDialog(this, "El registro ha sido eliminado con éxito");
                MostrarDatos(base); 
            } else {
                JOptionPane.showMessageDialog(this, "No se encontró el registro en la base de datos");
            }
        }
    
    public  String Calcular_CodConsejos(ObjectContainer Base) {

        boolean rest = true;
        int Incremental = 0;
        String Codigo;
        do {

            Incremental++;

            Codigo = String.format("CON-%04d", Incremental);

            if (Verificar_CodPregunta(Base, Codigo) == 0) {
                rest = false;
            }

        } while (rest);

        return Codigo;
    }
    
    public static int Verificar_CodPregunta(ObjectContainer Base, String CodConsejos) {
        Consejos consejito = new Consejos();
        consejito.setCod_consejo(CodConsejos);
        ObjectSet result = Base.get(consejito);

        return result.size();

    }
    
    private String extraerRutaDesdeDescripcionConsejo(String descripcionConsejo) {
        String[] partes = descripcionConsejo.split("\\|");

        if (partes.length > 1) {
            return partes[1];
        } else {
            return null;
        }
    }

    private void actualizarImagenesConsejoEnJLabel(String rutaImagen1, String rutaImagen2) {
        try {
            byte[] imagenBytes1 = obtenerBytesDesdeRutaConsejo(rutaImagen1);
            byte[] imagenBytes2 = obtenerBytesDesdeRutaConsejo(rutaImagen2);

            Image imagenOriginal1 = convertirBytesAImagen(imagenBytes1);
            Image imagenOriginal2 = convertirBytesAImagen(imagenBytes2);

            if (imagenOriginal1 != null && imagenOriginal2 != null) {
                Image imagenRedimensionada1 = imagenOriginal1.getScaledInstance(550, 330, Image.SCALE_SMOOTH);
                Image imagenRedimensionada2 = imagenOriginal2.getScaledInstance(550, 330, Image.SCALE_SMOOTH);

                ImageIcon iconoRedimensionado1 = new ImageIcon(imagenRedimensionada1);
                ImageIcon iconoRedimensionado2 = new ImageIcon(imagenRedimensionada2);

                imagen_1.setIcon(iconoRedimensionado1);
                imagen_2.setIcon(iconoRedimensionado2);
            } else {
                JOptionPane.showMessageDialog(this, "Error: No se pudo convertir alguna de las imágenes a formato válido.");
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al cargar las imágenes: " + e.getMessage());
        }
    }
    
    private byte[] obtenerBytesDesdeRutaConsejo(String rutaImagenConsejo) throws IOException {
        // Obtener los bytes desde la ruta de la imagen del consejo
        Path path = Paths.get(rutaImagenConsejo);
        return Files.readAllBytes(path);
    }
    
//    public void setValoresActuales(String titulo1, String titulo2, String texto1, String texto2, byte[] imagen1, byte[] imagen2) {
//        
//        
//        txtNuevoTitulo1.setText(titulo1);
//        txtNuevoTitulo2.setText(titulo2);
//        txtNuevoTexto1.setText(texto1);
//        txtNuevoTexto2.setText(texto2);
//
//        // Configura las imágenes actuales si existen
//        if (imagen1 != null) {
//            // Configura la imagen en tu componente correspondiente (puede ser un JLabel, por ejemplo)
//        }
//
//        if (imagen2 != null) {
//            // Configura la imagen en tu componente correspondiente
//        }
//    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PagCrudForoPsicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PagCrudForoPsicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PagCrudForoPsicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PagCrudForoPsicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PagCrudConsejosPsicologo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnActualizarPsicologo;
    private javax.swing.JButton BtnCerrarPagina;
    private javax.swing.JButton BtnConsultarPsicologo;
    private javax.swing.JButton BtnEliminarPsicologo;
    private javax.swing.JButton BtnModifiPsicologo;
    private javax.swing.JLabel Fondo;
    private javax.swing.JMenu JMenu3puntitosPsicologo;
    private javax.swing.JMenuItem JMnItmCerrarPsicologo;
    private javax.swing.JMenu JMnPgPrinPsicolo;
    private javax.swing.JTable JTConsejos;
    private javax.swing.JTextField Txt_TituloConsejPsicologo1;
    private javax.swing.JTextField Txt_TituloConsejPsicologo2;
    private javax.swing.JButton btn_Ingresar_imagen;
    private javax.swing.JButton btn_Ingresar_imagen1;
    private javax.swing.JButton btn_ingresar1;
    private javax.swing.JLabel imagen_1;
    private javax.swing.JLabel imagen_2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator12;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JTextArea txtAConsejoPsico1;
    private javax.swing.JTextArea txtAConsejoPsico2;
    // End of variables declaration//GEN-END:variables

}
