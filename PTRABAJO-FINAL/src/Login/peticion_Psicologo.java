/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Login;

import Clases.*;
import com.db4o.Db4o;
import com.db4o.ObjectContainer;
import com.db4o.ObjectSet;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author alexa
 */
public class peticion_Psicologo extends javax.swing.JFrame {

    private List<JButton> botones;
    ObjectContainer Base;
    UserDataSingleton usarData;

    /**
     * Creates new form peticion_Psicologo
     */
    public peticion_Psicologo() {
        initComponents();
        Base = Db4o.openFile("src/BBDD/BaseDat.yap");
        usarData = UserDataSingleton.getInstance();
        botones = new ArrayList<>();
        mostrar_peticiones(Base);
        Mostra_Diagnosticos(Base);
        cod_vin(Base);
    }

    public void cod_vin(ObjectContainer Base) {
        Psicologo psic = new Psicologo();
        psic.setCod_Psicologo(usarData.getCod_Psicologo());
        ObjectSet result = Base.get(psic);

        if (result.size() != 0) {
            Psicologo ne = (Psicologo) result.next();
            cod_vinculacion.setText(ne.getCodigo_vinculacion());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cod_vinculacion = new javax.swing.JTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        btn_eliminar = new javax.swing.JButton();
        btn_aceptar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_peticion = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtA_Des_pet = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        txt_fecha = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel5 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        MenuCuentosNiño = new javax.swing.JMenuBar();
        JMenu3puntitosNiño = new javax.swing.JMenu();
        JMnItmCerrarNiño = new javax.swing.JMenuItem();
        JMnPgPrinNiño = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setText("Codigo Vinculacion:");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 0, -1, 20));
        jPanel3.add(cod_vinculacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 0, 100, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 700, 30));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btn_eliminar.setBackground(new java.awt.Color(255, 0, 0));
        btn_eliminar.setText("Rechazar");
        btn_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eliminarActionPerformed(evt);
            }
        });
        jPanel2.add(btn_eliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 310, 180, -1));

        btn_aceptar.setBackground(new java.awt.Color(0, 255, 0));
        btn_aceptar.setText("Aceptar");
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });
        jPanel2.add(btn_aceptar, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 280, 180, -1));

        tabla_peticion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tabla_peticion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Cod", "Representante", "Niño", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_peticion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_peticionMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tabla_peticion);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 500, 140));

        jLabel2.setText("Peticiones:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        jLabel3.setText("Seleccione la tabla para saber la razon de la peticion");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 190, -1, -1));

        txtA_Des_pet.setEditable(false);
        txtA_Des_pet.setColumns(20);
        txtA_Des_pet.setRows(5);
        jScrollPane2.setViewportView(txtA_Des_pet);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, 350, 80));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("Mensaje del Representante:");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));
        jPanel2.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 210, 640, 20));

        jLabel5.setText("Fecha Peticion:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 230, -1, 20));
        jPanel2.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 240, 20));
        jPanel2.add(txt_fecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 230, 160, -1));

        jTabbedPane1.addTab("peticion", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Diagnosticos disponibles");
        jPanel4.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 11, -1, -1));

        jPanel5.setLayout(new java.awt.GridLayout(5, 1));
        jScrollPane3.setViewportView(jPanel5);

        jPanel4.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 39, 420, 300));

        jTabbedPane1.addTab("diagnosticos", jPanel4);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 20, 700, 400));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton2.setText("Diagnosticos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 430, -1, -1));

        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setText("Peticiones");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 430, 100, 30));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoClaro.jpg"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 480));

        JMenu3puntitosNiño.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/TresPuntitos.png"))); // NOI18N
        JMenu3puntitosNiño.setToolTipText("Configuración");

        JMnItmCerrarNiño.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        JMnItmCerrarNiño.setBackground(new java.awt.Color(255, 255, 255));
        JMnItmCerrarNiño.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/CerrarSesion.png"))); // NOI18N
        JMnItmCerrarNiño.setText("Cerrar Sesión");
        JMnItmCerrarNiño.setToolTipText("Cierra la sesión iniciada");
        JMnItmCerrarNiño.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JMnItmCerrarNiñoMousePressed(evt);
            }
        });
        JMenu3puntitosNiño.add(JMnItmCerrarNiño);

        MenuCuentosNiño.add(JMenu3puntitosNiño);

        JMnPgPrinNiño.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/Casita.png"))); // NOI18N
        JMnPgPrinNiño.setToolTipText("Resgresa a la página principal");
        JMnPgPrinNiño.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JMnPgPrinNiñoMouseClicked(evt);
            }
        });
        MenuCuentosNiño.add(JMnPgPrinNiño);

        setJMenuBar(MenuCuentosNiño);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void JMnItmCerrarNiñoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnItmCerrarNiñoMousePressed
        Base.close();
        InicioRepresentante loginrepre = new InicioRepresentante();
        loginrepre.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_JMnItmCerrarNiñoMousePressed

    private void JMnPgPrinNiñoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JMnPgPrinNiñoMouseClicked
        Base.close();
        PagPrincipalPsicologo principalrepresetante = new PagPrincipalPsicologo();
        principalrepresetante.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_JMnPgPrinNiñoMouseClicked
    String codtabla = "";
    private void tabla_peticionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_peticionMousePressed
        int selectedTable = tabla_peticion.getSelectedRow();
        codtabla = String.valueOf(tabla_peticion.getValueAt(selectedTable, 0));

        System.out.println("cod  _" + codtabla);
        mostrar_descri(Base, codtabla);


    }//GEN-LAST:event_tabla_peticionMousePressed

    private void btn_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eliminarActionPerformed
        estado_Rechazada_pticion(Base, codtabla);
        mostrar_peticiones(Base);
        System.out.println("Click en el boton RECHAZAR");
        txt_fecha.setText("");
        txtA_Des_pet.setText("s");

    }//GEN-LAST:event_btn_eliminarActionPerformed

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed

        estado_aceptado_pticion(Base, codtabla);
        mostrar_peticiones(Base);
        System.out.println("Click en el boton ACEPTAR");
    }//GEN-LAST:event_btn_aceptarActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String nombrePanelDeseado = "peticion";

        // Iterar a través de las pestañas y seleccionar por nombre
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
            Component componente = jTabbedPane1.getComponentAt(i);
            if (jTabbedPane1.getTitleAt(i).equals(nombrePanelDeseado)) {
                jTabbedPane1.setSelectedComponent(componente);
                break;
            }
        }


    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        String nombrePanelDeseado = "diagnosticos";

        // Iterar a través de las pestañas y seleccionar por nombre
        for (int i = 0; i < jTabbedPane1.getTabCount(); i++) {
            Component componente = jTabbedPane1.getComponentAt(i);
            if (jTabbedPane1.getTitleAt(i).equals(nombrePanelDeseado)) {
                jTabbedPane1.setSelectedComponent(componente);
                break;
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(peticion_Psicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(peticion_Psicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(peticion_Psicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(peticion_Psicologo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new peticion_Psicologo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu JMenu3puntitosNiño;
    private javax.swing.JMenuItem JMnItmCerrarNiño;
    private javax.swing.JMenu JMnPgPrinNiño;
    private javax.swing.JMenuBar MenuCuentosNiño;
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_eliminar;
    private javax.swing.JTextField cod_vinculacion;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tabla_peticion;
    private javax.swing.JTextArea txtA_Des_pet;
    private javax.swing.JTextField txt_fecha;
    // End of variables declaration//GEN-END:variables

    ///////////////////////////////////////////////////// PETICIONES //////////////////////////////////////////////////////////////
    public void mostrar_peticiones(ObjectContainer Base) {
        String repres = "";
        String nin = "";
        Date fechs = null;
        peticion_psico peti = new peticion_psico();
        peti.setEstado_peticion("Pendiente");
        peti.setFkCod_Psicologo(usarData.getCod_Psicologo());

        ObjectSet result = Base.get(peti);

        DefaultTableModel modelo = (DefaultTableModel) tabla_peticion.getModel();
        modelo.setRowCount(0);

        if (result.size() != 0) {
            while (result.hasNext()) {
                peticion_psico next = (peticion_psico) result.next();
                String cod = next.getCod_Peticion();
                String codSoli = next.getFKcod_solicitud();

                solicitud soli = new solicitud();
                soli.setCod_solicitud(codSoli);

                ObjectSet resp = Base.get(soli);

                if (resp.hasNext()) {
                    solicitud next1 = (solicitud) resp.next();
                    repres = Mostrar_nombre_Represent(Base, next1.getFKcod_representante());
                    nin = Mostrar_nombre_nin(Base, next1.getFKcod_niño());
                    fechs = next1.getFecha_soli();

                }

                modelo.addRow(new Object[]{
                    cod,
                    repres,
                    nin,
                    fechs
                });

            }

        } else {
            JOptionPane.showMessageDialog(this, "No hat Peticiones existentes");
        }

    }

    public String Mostrar_nombre_nin(ObjectContainer Base, String cod) {
        String nombres = "";
        Niño nin = new Niño();
        nin.setCod_Niño(cod);

        ObjectSet result = Base.get(nin);
        if (result.size() != 0) {
            while (result.hasNext()) {
                Niño next = (Niño) result.next();

                nombres = next.getNombre() + " " + next.getApellido();

            }

        } else {
            System.out.println("No se encontro al niño");
        }
        return nombres;
    }

    public String Mostrar_nombre_Represent(ObjectContainer Base, String cod) {
        String nombres = "";
        Representante nin = new Representante();
        nin.setCod_Repre(cod);

        ObjectSet result = Base.get(nin);
        if (result.size() != 0) {
            while (result.hasNext()) {
                Representante next = (Representante) result.next();

                Persona person = new Persona();
                person.setCedula(next.getFKCod_Cedula());
                ObjectSet resu = Base.get(person);
                while (resu.hasNext()) {
                    Persona next1 = (Persona) resu.next();

                    nombres = next1.getNombre() + " " + next1.getApellido();

                }
            }

        } else {
            System.out.println("No se encontro al Psicologo");
        }
        return nombres;
    }

    public void estado_aceptado_pticion(ObjectContainer Base, String codpet) {
        String cod_peti = "";
        if (!codpet.isEmpty()) {
            peticion_psico soli = new peticion_psico();
            soli.setCod_Peticion(codpet);

            ObjectSet result = Base.get(soli);

            while (result.hasNext()) {
                peticion_psico next = (peticion_psico) result.next();
                cod_peti = next.getCod_Peticion();

                System.out.println("Cambia Acep: " + next.getEstado_peticion());
                next.setEstado_peticion("Aceptada");

                Base.store(next);
                Base.commit();

                JOptionPane.showMessageDialog(this, "Se ACEPTO la Peticion");
                Crear_Diagnostico(Base, cod_peti);
            }

        } else {

            System.out.println("Esta vacio el cod");
        }

    }

    public void estado_Rechazada_pticion(ObjectContainer Base, String codpet) {
        if (!codpet.isEmpty()) {
            peticion_psico soli = new peticion_psico();
            soli.setCod_Peticion(codpet);

            ObjectSet result = Base.get(soli);

            while (result.hasNext()) {
                peticion_psico next = (peticion_psico) result.next();
                System.out.println("Cambia recha: " + next.getEstado_peticion());
                next.setEstado_peticion("Rechazada");

                Base.store(next);
                Base.commit();

                JOptionPane.showMessageDialog(this, "Se RECHAZO la Peticion");

            }

        } else {

            System.out.println("Esta vacio el cod");
        }

    }

    public void mostrar_descri(ObjectContainer Base, String cod) {
        if (rootPaneCheckingEnabled) {
            peticion_psico pet = new peticion_psico();
            pet.setCod_Peticion(cod);
            ObjectSet result = Base.get(pet);

            if (result.size() != 0) {
                while (result.hasNext()) {
                    peticion_psico nextt = (peticion_psico) result.next();
                    System.out.println(nextt.getDescripcion());

                    txtA_Des_pet.setText(nextt.getDescripcion());
                    txt_fecha.setText(String.valueOf(nextt.getFecha_pet()));
                }
            } else {
                System.out.println("No hay considencias");
            }

        } else {
            System.out.println("el cod esta vacio");
        }

    }

    public void Crear_Diagnostico(ObjectContainer Base, String cod_peticion) {
        Diagnosticos dig = new Diagnosticos();

        String codDia = generarYVerificarDiagnostico(Base);
        System.out.println("Coss diag___________ :" + codDia);

        dig.setCod_Diagnostico(codDia);
        dig.setFkCod_Psicologo(usarData.getCod_Psicologo());
        dig.setFkCod_Peticion(cod_peticion);
        dig.setEstado_diag("En Proceso");
        dig.setFecha_diag(new Date());

        int num = calcular_num_Diag(Base);
        System.out.println("Num diag_" + num);

        //  dig.setNumber_diag(num);
        if (verificarCodigoDiagnostico(Base, codDia) == 0) {
            Base.store(dig);
            Base.commit();
            JOptionPane.showMessageDialog(this, "Diagnostico N°" + num + " agregado");
        } else {
            // Manejar el caso en el que ya existe un diagnóstico con la misma clave
            JOptionPane.showMessageDialog(this, "Ya existe un diagnóstico con la misma clave");
        }
    }

    public String generarYVerificarDiagnostico(ObjectContainer base) {
        String codigo;
        boolean codigoUnico = false;
        int intentos = 0;

        do {
            intentos++;
            codigo = String.format("DG%03d", intentos);
            codigoUnico = verificarCodigoDiagnostico(base, codigo) == 0;
        } while (!codigoUnico);

        return codigo;
    }

    private int verificarCodigoDiagnostico(ObjectContainer base, String codigo) {
        Diagnosticos diagnostico = new Diagnosticos();
        diagnostico.setCod_Diagnostico(codigo);
        ObjectSet result = base.get(diagnostico);

        return result.size();
    }

    public int calcular_num_Diag(ObjectContainer Base) {
        boolean rep = true;

        int Num = 1;
        while (rep) {
            Num++;
            if (verificra_cos_Diag(Base, Num) == 0) {
                rep = false;
            }

        }
        return Num;

    }

    public int verificra_cos_Diag(ObjectContainer Base, int codsoli) {
        Diagnosticos sol = new Diagnosticos();
        sol.setNumber_diag(codsoli);
        sol.setFkCod_Psicologo(usarData.getCod_Psicologo());
        ObjectSet result = Base.get(sol);

        return result.size();
    }
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    public void Mostra_Diagnosticos(ObjectContainer Base) {
        Diagnosticos dis = new Diagnosticos();
        //dis.setFkCod_Psicologo(usarData.getCod_Psicologo());
        // dis.setEstado_diag("En Proceso");

        ObjectSet result = Base.get(dis);
        System.out.println("mm " + result.size());

        if (result.size() != 0) {
            while (result.hasNext()) {
                Diagnosticos next = (Diagnosticos) result.next();
                JButton boton = new JButton("Codigo Diagnostico " + next.getCod_Diagnostico() + "           Numero N°" + next.getNumber_diag());

                // Agregar un ActionListener al botón
                boton.addActionListener(new ActionListener() {
                    @Override
                    public void actionPerformed(ActionEvent e) {
                        // La función específica que deseas ejecutar al hacer clic en el botón
                        System.out.println("Botón clickeado: " + next.getCod_Diagnostico());
                        // Agrega aquí la lógica específica que deseas para este botón
                    }
                });
                jPanel5.add(boton);
                botones.add(boton);
                jPanel5.updateUI();
            }
        } else {
            System.out.println("No se encontro Diagnosticos disponibles");
        }
    }

}
